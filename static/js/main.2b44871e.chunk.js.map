{"version":3,"sources":["uses/useRequestAnimation.tsx","helpers/index.tsx","helpers/render/view.tsx","helpers/render/canvas.tsx","providers/AnimationProvider/index.tsx","providers/NotificationProvider/index.tsx","providers/FontSettingsProvider/index.tsx","uses/useFont.tsx","providers/LoadFontProvider/index.tsx","providers/TextProvider/index.tsx","components/Letter/LetterItemAnimation/index.tsx","components/Letter/LetterItem/index.tsx","components/Letter/LetterType/index.tsx","components/Letter/index.tsx","components/Word/index.tsx","providers/LettersProvider/index.tsx","providers/TemplateProvider/index.tsx","providers/MainProvider/index.tsx","components/AnimationSlider/index.tsx","components/DragDrop/index.tsx","components/TextProperties/TextPropertySlider/index.tsx","components/TextProperties/index.tsx","components/EditText/index.tsx","components/InputText/index.tsx","components/Slider/Gallery/index.tsx","components/GalleryTemplates/index.tsx","components/Slider/Base/index.tsx","components/FontLoad/index.tsx","components/Load/index.tsx","components/Preview/index.tsx","components/SelectLetters/index.tsx","components/SelectFinalState/index.tsx","layout/Content/index.tsx","layout/Main/index.tsx","serviceWorker.ts","index.tsx"],"names":["renderCanvas","load","current","animate","this","renderView","chunks","mediaRecorder","videoStream","canvas","Object","captureStream","MediaRecorder","video","document","querySelector","ondataavailable","data","size","push","onstop","blob","Blob","videoURL","URL","createObjectURL","src","onloadeddata","generateVideo","scale","window","devicePixelRatio","ctx","getContext","letters","body","querySelectorAll","previewContent","clearRect","beginPath","getBoundingClientRect","x","y","forEach","letter","img","width","height","drawImage","capture","state","console","log","start","stop","canvasDrawing","recorder","aab","formData","FormData","append","axios","method","url","headers","then","e","download","catch","a","createElement","style","display","href","appendChild","click","postBlob","useRequestAnimation","callback","requestRef","useRef","requestAnimationFrame","previousTimeRef","useState","play","setPlay","timestamp","ms","Date","now","process","render","onStop","cancelAnimationFrame","useEffect","onPlay","AnimationContext","createContext","memo","children","setCurrent","requestAnimation","deltaTime","animation","percent","parseFloat","toString","toFixed","onChange","useCallback","value","Provider","NotificationContext","NotificationProvider","notificationBasic","title","description","Notification","open","duration","notificationSuccess","notificationError","FontSettingsContext","font","getFvarTable","settings","setSettings","coordinates","name","en","initialState","setInitialState","setNamedInstance","setts","setInstanceValue","element","cssProperties","keys","map","key","fontVariationSettings","join","setNamedInstanceValue","item","setMainInstance","useFont","tables","getNamedInstance","i","fvar","instances","getNamedInstanceSetting","index","values","axes","length","tag","LoadFontContext","notificationContext","useContext","setFont","Uint8ToString","u8a","c","String","fromCharCode","apply","subarray","setFontFace","fontBuffer","base","base64","encode","Uint8Array","fontFace","names","fontFamily","getElementById","textContent","onReadFile","file","reader","FileReader","onload","target","result","opentype","parse","err","error","onerror","readAsArrayBuffer","fetch","response","File","type","onLoad","TextContext","TextProvider","text","setText","fontSize","lineHeight","letterSpacing","textAlign","textProperties","setTextProperties","animationCanvas","parent","parentNode","setAttribute","fillStyle","textBaseline","fillText","props","instance","entries","indexTo","toValue","diff","Math","abs","val","pos","className","ref","instanceFont","onSelect","onClick","selectLetter","findInstance","filter","data-active","items","fontSettingsContext","lettersContext","LettersContext","textContext","updateLetterItem","easing","setLetter","active","Array","isArray","onSelectSettings","check","data-type","curveColor","defaultValue","readOnly","word","k","character","getWord","setLetters","getAlign","getLetter","setLetterItem","lett","indexOf","getCountWords","str","trim","split","getLineBreak","textWordLetterArray","breaks","textLine","words","textWordLetter","elements","setAll","TemplateContext","TemplateProvider","loadFontContext","checkedIndex","getInstances","generateLetters","init","bezier","generate","templates","template","limit","floor","random","templateData","MainContext","MainProvider","animationContext","Col","xs","Button","Slider","min","max","parseInt","progress","onDrop","files","blobFile","Uploader","autoUpload","draggable","accept","fileListVisible","IconButton","icon","Icon","TextPropertySlider","label","property","options","ControlLabel","tooltip","TextProperties","Number","onAlign","Form","FormGroup","ButtonGroup","step","Edit","InputText","FormControl","placeholder","componentClass","toUpperCase","SliderGallery","onPrevNext","gallery","useSpring","set","scrollProps","setScrollProps","parentWidth","containerWidth","container","galleryWidth","widthElement","barScrollWidth","properties","scrollMove","drag","useDrag","down","xDir","movement","direction","distance","checkScroll","widthScroll","position","div","transform","interpolate","Child","left","SliderBase","Component","last","undefined","bind","setState","isNaN","dir","React","displayName","templateContext","selectTemplate","image","alt","FontLoad","version","justifyContent","id","Message","Content","setItems","pro","setPro","textPro","setTextPro","fontContext","res","json","FlexboxGrid","justify","Item","colspan","ButtonToolbar","Drawer","placement","show","onHide","Header","Title","Body","Footer","appearance","EditText","Main","Container","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2b44871e.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from 'react';\n\nimport RenderCanvas from '../helpers';\n\n// render canvas\nconst renderCanvas: any = new RenderCanvas();\n\n// use animation frame\nconst useRequestAnimation = (callback: any):any => {\n  // refs\n  const requestRef:any = useRef(window.requestAnimationFrame);\n  const previousTimeRef:any = useRef();\n  \n  // state\n  const [ play, setPlay ]:any = useState(false);\n\n  let start:any = null;\n  const total: any = process.env.REACT_APP_FONT_TIME || 0;\n  \n  // animate\n  const animate = (timestamp: number) => {\n    const ms: number = Date.now() - start;\n    \n    if (ms < total) {\n      callback(ms);\n      renderCanvas.render(ms, true);\n      requestRef.current = requestAnimationFrame(animate);\n    } else {\n      onStop();\n    }\n\n    previousTimeRef.current = timestamp;\n  };\n\n  // on play\n  const onPlay = () => {\n    start = Date.now();\n    requestRef.current = requestAnimationFrame(animate);\n    renderCanvas.render(0, true);\n    \n    setPlay(true);\n  };\n\n  // stop\n  const onStop = () => {\n    cancelAnimationFrame(requestRef.current);\n    renderCanvas.render(0);\n\n    setPlay(false);\n  };\n  \n  // use effect\n  useEffect(() => {\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n\n  return {\n    play,\n    setPlay,\n    onPlay,\n    onStop\n  };\n};\n\nexport default useRequestAnimation;","import View from './render/view';\n\n// render letters\nexport default class RenderCanvas extends View {\n  // constructor\n  constructor () {\n    super();\n\n    this.load();\n  }\n\n  // render\n  render (current: number, animate: boolean = false) {\n    this.renderView(current, animate);\n  }\n}","import CanvasRecord from './canvas';\n\n/**\n * View\n */\nexport default class View extends CanvasRecord {\n  public chunks: any[];\n  public mediaRecorder: any;\n  public videoStream: any;\n\n  constructor() {\n    super();\n\n    this.chunks = [];\n  }\n\n  // capture\n  capture (canvas: any) {\n    if (canvas instanceof Object === false) return false;\n\n    this.videoStream = this.canvas.captureStream(29,97);\n    this.mediaRecorder = new MediaRecorder(this.videoStream);\n\n    const video:any = document.querySelector('video');\n\n    this.mediaRecorder.ondataavailable = ({ data }: any) => data.size > 0 ? this.chunks.push(data) : null;\n\n    this.mediaRecorder.onstop = () => {\n      const blob = new Blob(this.chunks, { 'type' : 'video/mp4; codecs=\"avc1.4d002a\"' });\n      this.chunks = [];\n      \n      const videoURL: any = URL.createObjectURL(blob);\n      \n      video.src = videoURL;\n      video.onloadeddata = () => this.generateVideo(blob);\n    };\n  }\n\n  // canvas drawing\n  canvasDrawing () {\n    const scale = window.devicePixelRatio;\n    const ctx: any = this.canvas?.getContext('2d');\n\n    ctx.scale(scale, scale);\n\n    if (ctx instanceof Object) {\n      const letters = document.body.querySelectorAll('.letter-item-animation canvas');\n      const previewContent = document.body.querySelector('.preview--content');\n\n      ctx.clearRect(0, 0, 1920, 1080);\n      ctx.beginPath();\n      \n      if (letters instanceof Object) {\n        const { x, y }: any = previewContent?.getBoundingClientRect();\n\n        letters.forEach((letter: any) => {\n          if (letter instanceof Object) {\n            const img = letter.getBoundingClientRect();\n\n            if (img.width && img.height) {\n              ctx.drawImage(letter, img.x - x, img.y - (y - (540 / 2)), img.width, img.height);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  // render\n  renderView (current: number, animate: boolean) {\n    if (!this.canvas) {\n      this.canvas = document.body.querySelector('#preview-canvas');\n      this.capture(this.canvas);\n    }\n    \n    if (animate === true) {\n      if (this.mediaRecorder instanceof Object && this.mediaRecorder.state !== 'recording') {\n        console.log('play');\n        this.mediaRecorder.start();\n      }\n    } else if (this.mediaRecorder.state !== 'inactive') {\n      console.log('stop');\n      this.mediaRecorder.stop();\n      this.capture(this.canvas);\n    }\n\n    this.canvasDrawing();\n  }\n}","import axios from 'axios';\n\nexport default class CanvasRecord {\n  public canvas: any;\n  public recorder: any;\n\n  public aab: any;\n\n  // constructor\n  constructor() {\n    this.canvas = document.body.querySelector('#preview-canvas');\n    this.aab = [];\n  }\n\n  // load\n  load () {\n    this.canvas = document.body.querySelector('#preview-canvas');\n  }\n\n  // post blob\n  postBlob(blob: any) {\n    let formData = new FormData();\n    formData.append('file', blob);\n\n    axios({\n      method: 'POST',\n      url: 'https://font-var-render-server.herokuapp.com/upload-video',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    })\n    .then(e => this.download(window.URL.createObjectURL(blob)))\n    .catch(e => console.log(e));\n  }\n\n  // download\n  download(url: any) {\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'video';\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  // generate video\n  generateVideo (blob: any) {\n    this.postBlob(blob);\n  }\n}","import React, { createContext, useState, FunctionComponent, memo, useCallback } from 'react';\n\nimport useRequestAnimation from '../../uses/useRequestAnimation';\n\nimport { IAnimationContext, IAnimationProvider } from './interfaces';\n\n// animation context\nconst AnimationContext = createContext({} as IAnimationContext);\n\n// animation provider\nconst AnimationProvider: FunctionComponent<IAnimationProvider> = ({ children }: any) => {\n  // text\n  const [ current, setCurrent ]:any = useState(0);\n\n  // animation\n  const animation = (deltaTime: number) => {\n    const animation: number = deltaTime * 0.001;\n\n    if (animation >= (1 / 100)) {\n      setCurrent(() => {\n        const percent = ((deltaTime - 1000) / 1000) * 100;\n\n        if (percent > 100) {\n          return 100;\n        }\n\n        return parseFloat(percent.toString()).toFixed(2);\n      });\n    }\n};\n\n  // animation\n  const requestAnimation = useRequestAnimation(animation);\n  const { play, setPlay, onPlay, onStop } = requestAnimation;\n\n  // play\n  const onChange = useCallback(() => {\n    const value = !play;\n\n    if (value === true) {\n      setPlay(value);\n      onPlay();\n    } else {\n      onStop();\n    }\n  }, [ onPlay, onStop, play, setPlay ]);\n\n  // render\n  return (\n    <AnimationContext.Provider value={{\n      current,\n      setCurrent,\n      play,\n      onPlay: onChange,\n    }}>\n      {children}\n    </AnimationContext.Provider>\n  );\n};\n\nexport { AnimationContext, AnimationProvider };\nexport default memo(AnimationProvider);","import React, { createContext, useCallback, FunctionComponent } from 'react';\nimport { Notification } from 'rsuite';\n\nimport { INotificationContext, INotificationProvider } from './interfaces';\n\n// notification\nconst NotificationContext = createContext({} as INotificationContext);\n\n// notification\nconst NotificationProvider: FunctionComponent<INotificationProvider> = ({ children }) => {\n  // duration\n  const duration = 5000;\n\n  // notification \n  const notificationBasic = useCallback((title: string, description: string) => {\n    Notification.open({\n      title,\n      duration,\n      description: (description),\n    });\n  }, [ duration ]);\n\n  // notification success\n  const notificationSuccess = useCallback((title: string, description: any) => {\n    Notification['info']({\n      title,\n      duration,\n      description: (description),\n    });\n  }, [ duration ]);\n\n  // notification error\n  const notificationError = useCallback((title: string, description: any) => {\n    Notification['error']({\n      title,\n      duration,\n      description: (description),\n    });\n  }, [ duration ]);\n\n  // render\n  return (\n    <NotificationContext.Provider value={{\n      notificationBasic,\n      notificationSuccess,\n      notificationError,\n    }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport { NotificationContext, NotificationProvider };\nexport default NotificationProvider;","import React, { createContext, FunctionComponent, memo, useState, useCallback, useEffect } from 'react';\n\nimport { IFontSettingsContext, IFontSettingsProvider } from './interfaces';\n\n// Load Font Context\nconst FontSettingsContext = createContext({} as IFontSettingsContext);\n\n// Load Font Provider\nconst FontSettingsProvider: FunctionComponent<IFontSettingsProvider> = ({ children, font, getFvarTable }) => {\n  // axes\n  const [ settings, setSettings ]: any = useState();\n  const [ initialState, setInitialState ]:any = useState({\n    coordinates: { name: { en: 'Neutra' }, coordinates: { 'wdth': 30, 'wght' :0 } }\n  });\n\n  // set named instance\n  const setNamedInstance = useCallback((setts: any) => {\n    setSettings({...settings, ...setts });\n  }, [ setSettings, settings ]);\n\n  // set css instance value\n  const setInstanceValue = useCallback((settings: any[], element: any) => {\n    if (settings instanceof Object === false) return false;\n\n    const cssProperties = Object.keys(settings).map((key: any) => `'${key}' ${settings[key]}`);\n  \n    if (cssProperties && element instanceof Object) {\n      const css:any = element.style as StyleSheet;\n      css.fontVariationSettings = cssProperties.join();\n    }\n\n    return true;\n  }, []);\n\n  // set name instance value\n  const setNamedInstanceValue = useCallback((item: any, element: any) => {\n    const fvar = getFvarTable(font);\n\n    if (fvar) {\n      const setts = { ...settings, ...item };\n\n      if (setInstanceValue(setts, element)) {\n        setSettings(setts);\n      }\n    }\n  }, [ settings, getFvarTable, setInstanceValue, font ]);\n\n  // set main instance\n  const setMainInstance = useCallback((setts: any) => {\n    setInstanceValue(setts, document.body);\n    setInitialState(setts);\n  }, [ setInstanceValue ]);\n\n  // use effect\n  useEffect(() => {\n    const load = () => {\n      const body:any = document.body;\n      const cssProperties = '\"wdth\" 30, \"wght\" 0';\n  \n      if (body instanceof Object) {\n        const css:any = body.style as StyleSheet;\n        css.fontVariationSettings = cssProperties;\n      }\n    };\n\n    load();\n  }, [ font ]);\n\n  // render\n  return (\n    <FontSettingsContext.Provider value={{\n      settings,\n      setNamedInstance,\n      setNamedInstanceValue,\n      setInstanceValue,\n      initialState,\n      setInitialState: setMainInstance\n    }}>\n      {children}\n    </FontSettingsContext.Provider>\n  );\n};\n\nexport { FontSettingsContext, FontSettingsProvider };\nexport default memo(FontSettingsProvider);","import { IFontInfo } from '../providers/FontSettingsProvider/interfaces';\nimport { useCallback } from 'react';\n\n// use font\nconst useFont = (font: IFontInfo) => {\n  // get fvar table\n  const getFvarTable = useCallback((font: IFontInfo) => {\n    if (font.tables) {\n      return font.tables['fvar'];\n    }\n\n    return false;\n  }, []);\n\n  // get name instance\n  const getNamedInstance = useCallback((i: number) => {\n    const fvar = getFvarTable(font);\n\n    if (fvar) {\n      return fvar.instances[i];\n    }\n\n    return null;\n  }, [ font, getFvarTable ]);\n\n  // get named instance setting\n  const getNamedInstanceSetting = useCallback((index: number) => {\n    const fvar = getFvarTable(font);\n\n    if (fvar) {\n      const settings = [];\n      const values = fvar.instances[index].coordinates;\n\n      for (let i = 0; i < fvar.axes.length; i++) {\n        settings.push(`'${fvar.axes[i].tag}' ${values[fvar.axes[i].tag].toString()}`);\n      }\n\n      return settings.join();\n    }\n\n    return null;\n  }, [ font, getFvarTable ]);\n\n  return {\n    getFvarTable,\n    getNamedInstance,\n    getNamedInstanceSetting\n  };\n};\n\nexport default useFont;","import React, { createContext, memo, useCallback, useEffect, useState, useContext, FunctionComponent } from 'react';\nimport opentype from 'opentype.js';\nimport base64 from 'base-64';\n\nimport { NotificationContext } from '../NotificationProvider';\nimport FontSettingsProvider from '../FontSettingsProvider';\n\nimport useFont from '../../uses/useFont';\n\nimport { IFontInfo } from '../FontSettingsProvider/interfaces';\nimport { ILoadFontContext, ILoadFontProvider } from './interfaces';\n\n// Load Font Context\nconst LoadFontContext = createContext({} as ILoadFontContext);\n\n// Load Font Provider\nconst LoadFontProvider: FunctionComponent<ILoadFontProvider> = ({ children }) => {\n  // context\n  const notificationContext = useContext(NotificationContext);\n  const { notificationSuccess, notificationError } = notificationContext;\n\n  // state\n  const [ font, setFont ]:any = useState<IFontInfo>();\n\n  // get f var table\n  const { getFvarTable } = useFont(font);\n\n  // uint 8 to string\n  const Uint8ToString = (u8a: any) => {\n    let CHUNK_SZ = 0x8000;\n    let c = [];\n\n    for (let i = 0; i < u8a.length; i+= CHUNK_SZ) {\n      c.push(String.fromCharCode.apply(null, u8a.subarray(i, i+CHUNK_SZ)));\n    }\n\n    return c.join('');\n  };\n\n  // set font face\n  const setFontFace = useCallback(async (font, fontBuffer) => {\n    if (document instanceof Object) {\n      const base = base64.encode(Uint8ToString(new Uint8Array(fontBuffer)));\n      const fontFace: any = `@font-face {\n        font-family: '${font.names.fontFamily.en}';\n        src: url('data:;base64,${base}') format('truetype');\n      }`;\n\n      const style: any = document.getElementById('font-load');\n      style.textContent = fontFace;\n      \n      notificationSuccess('Upload', 'The type font was successfully loaded!');\n    }\n  }, [ notificationSuccess ]);\n\n  // on read file\n  const onReadFile = useCallback((file): any => {\n    const reader = new FileReader();\n\n    reader.onload = (e: { target: any }): any => {\n      try {\n        const fontBuffer = e.target.result;\n        const font = opentype.parse(fontBuffer);\n\n        setFont(font);\n        setFontFace(font, fontBuffer);\n      } catch (err) {\n        notificationError('Erro loading', 'Verify the font file and try again!');\n        console.error(err.toString());\n      }\n    };\n\n    reader.onerror = err => {\n      notificationError('Erro loading', 'Verify the font file and try again!');\n      console.error(err.toString());\n    };\n\n    reader.readAsArrayBuffer(file);\n  }, [ setFontFace, notificationError ]);\n\n  // use effect\n  useEffect(() => {\n    const load = () => {\n      const url = `${process.env.PUBLIC_URL}${process.env.REACT_APP_FONT_DEFAULT}`;\n\n      fetch(url)\n        .then(response => response.blob())\n        .then((blob: any) => {\n          const file = new File([blob], 'untitled', { type: blob.type });\n\n          opentype.load(url, (err: any, font: any) => {\n            if (err) { console.log(err); return; }\n    \n            document.body.style.fontFamily = font.names.fontFamily.en;\n            setFont(font);\n          });\n          \n          onReadFile(file);\n        });\n    };\n\n    load();\n  }, [ onReadFile ]);\n\n  // render\n  return (\n    <LoadFontContext.Provider value={{\n      font,\n      onLoad: onReadFile\n      }}>\n        <FontSettingsProvider\n          font={font}\n          getFvarTable={getFvarTable}>\n          {children}\n        </FontSettingsProvider>\n    </LoadFontContext.Provider>\n  );\n};\n\nexport { LoadFontContext, LoadFontProvider };\nexport default memo(LoadFontProvider);","import React, { createContext, FunctionComponent, useState } from 'react';\n\nimport { ITextContext, ITextProvider } from './interfaces';\n\n// text content\nconst TextContext = createContext({} as ITextContext);\n\n// notification\nconst TextProvider: FunctionComponent<ITextProvider> = ({ children }) => {\n  // text\n  const [ text, setText ]:any = useState(process.env.REACT_APP_FONT_TEXT_DEFAULT);\n  const [ textProperties, setTextProperties ]:any = useState({\n    fontSize: 65,\n    lineHeight: 1,\n    letterSpacing: -10,\n    textAlign: 'left', \n  });\n\n  // render\n  return (\n    <TextContext.Provider value={{\n      text,\n      setText,\n      textProperties,\n      setTextProperties\n    }}>\n      {children}\n    </TextContext.Provider>\n  );\n};\n\nexport { TextContext, TextProvider };\nexport default TextProvider;","import React, { memo, useCallback, useContext, useEffect, useRef, FunctionComponent } from 'react';\n//import BezierEasing from 'bezier-easing';\n\nimport { AnimationContext } from '../../../providers/AnimationProvider';\n\nimport { ILetterItemAnimation } from './interfaces';\n\nimport './letter-item-animation.scss';\n\n// letter animation\nconst LetterItemAnimation: FunctionComponent<ILetterItemAnimation> = ({ letter, text, setInstanceValue, textProperties }) => {\n  // context\n  const animationContext = useContext(AnimationContext);\n  const { current } = animationContext;\n\n  // element\n  const element = useRef(null);\n\n  // animation canvas\n  const animationCanvas = useCallback((element: any, text: string) => {\n    const { width, height } = element.getBoundingClientRect();\n    const parent: any = element.parentNode.querySelector('.canvas') as HTMLCanvasElement;\n\n    if (parent) {\n      const ctx = parent.getContext('2d');\n      parent.setAttribute('width', width);\n      parent.setAttribute('height', height);\n\n      if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n        ctx.beginPath();\n\n        ctx.font = `${textProperties.fontSize}px Canal Brasil VF`; //var name\n        ctx.fillStyle = 'white';\n        \n        ctx.textBaseline = 'middle';\n        ctx.fillText(text, 0, height / 2);\n      }\n    }\n  }, [ textProperties ]);\n\n  // animation\n  const animation = useCallback((letter: any, element: any) => {\n    if (letter instanceof Object === false) return false;\n\n    let props: any = {};\n    const { settings, instance } = letter;\n\n    if (settings !== instance) {\n      //const easingAnimation = BezierEasing(easing[0], easing[1], easing[2], easing[3]);\n      const animate: any = current;\n\n      Object.entries(instance.coordinates).forEach(([ indexTo, toValue ]:any) => {\n        const value = settings.coordinates[indexTo];\n        const reverse = toValue < value;\n        \n        if (reverse === true) {\n          const diff = Math.abs(toValue - value);\n\n          if (diff > 0) {\n            if (toValue === 0) {\n              const val = (diff - current);\n              \n              if (val > toValue) {\n                props[indexTo] = val;\n              } else {\n                props[indexTo] = toValue;\n              }\n            } else {\n              const val = (value - animate);\n\n              if (val > toValue) {\n                props[indexTo] = val;\n              } else {\n                props[indexTo] = toValue;\n              }\n            }\n          } else {\n            props[indexTo] = toValue;\n          }\n        } else {\n          if (value === toValue) {\n            props[indexTo] = toValue;\n          } else {\n            const pos = ((toValue * current) / 100);\n            props[indexTo] = (pos > toValue) ?  toValue : pos;\n          }\n        }\n      });\n    } else {\n      props = settings;\n    }\n\n    animationCanvas(element, text);\n    setInstanceValue(props, element);\n  }, [ current, setInstanceValue, text, animationCanvas ]);\n\n  // use effect\n  useEffect(() => {\n    if (letter.settings) {\n      animation(letter, element.current);\n    }\n  }, [ letter, animation ]);\n\n  // render\n  return (\n    <div className=\"letter-item-animation\" ref={element}>\n      <p className=\"letter--text end\">{text}</p>\n      \n      <canvas className=\"canvas\" />\n    </div>\n  );\n};\n\nexport default memo(LetterItemAnimation);","import React, { memo, useRef, useEffect } from 'react';\n\nimport './letter-item.scss';\n\n// letter item\nconst LetterItem = ({ instanceFont, setInstanceValue, text, onSelect }: any) => {\n  // element\n  const element: any = useRef(null);\n\n  // use effect\n  useEffect(() => {\n    if (element.current) {\n      setInstanceValue(instanceFont.coordinates, element.current);\n    }\n  }, [ text, instanceFont, setInstanceValue, element ]);\n\n  // render\n  return (\n    <div className=\"letter-item\" ref={element} onClick={() => onSelect(instanceFont.coordinates)}>\n      <p className=\"letter--text\">{text}</p>\n    </div>\n  );\n};\n\nexport default memo(LetterItem);","import React, { memo, useCallback, FunctionComponent } from 'react';\n\nimport LetterItem from '../LetterItem';\n\nimport { ILetterType } from './interfaces';\n\nimport './letter-type.scss';\n\n// letter type\nconst LetterType: FunctionComponent<ILetterType> = ({ current, setInstanceValue, instances, text, onSelect }: any) => {\n  // on select\n  const selectLetter = useCallback((instance: any) => {\n    if (instance instanceof Object === false) return false;\n\n    const findInstance = instances.filter(({ coordinates }:any) => coordinates === instance);\n    \n    if (findInstance.length > 0) {\n      onSelect(findInstance[0]);\n    }\n  }, [ onSelect, instances ]);\n\n  // render\n  return (\n    <ul className=\"letter-type\">\n      {instances && instances.map((item: any, index: number) => \n        <li className=\"letter-type--item\"\n          data-active={current.coordinates === item.coordinates}\n          key={index}>\n          \n          <LetterItem\n            instanceFont={item}\n            setInstanceValue={setInstanceValue}\n            text={text}\n            onSelect={selectLetter} />\n        </li>)}\n    </ul>\n  );\n};\n\nexport default memo(LetterType);","import React, { memo, useContext, useRef, useState, useEffect, useCallback } from 'react';\nimport BezierEditor from 'bezier-easing-editor';\n\nimport { FontSettingsContext } from '../../providers/FontSettingsProvider';\nimport { LettersContext } from '../../providers/LettersProvider';\nimport { TextContext } from '../../providers/TextProvider';\n\nimport LetterItemAnimation from './LetterItemAnimation';\nimport LetterType from './LetterType';\n\nimport './letter.scss';\n\n// letter\nconst Letter = ({ items, fvar, index, text, type, onChange }: any) => {\n  // context\n  const fontSettingsContext = useContext(FontSettingsContext);\n  const lettersContext = useContext(LettersContext);\n  const textContext = useContext(TextContext);\n\n  const { setInstanceValue, initialState }:any = fontSettingsContext;\n  const { updateLetterItem }:any = lettersContext;\n  const { textProperties }:any = textContext;\n\n  // element\n  const element: any = useRef();\n\n  // state\n  const [ letter, setLetter ]:any = useState({ \n    index: index,\n    instance: initialState.coordinates,\n    easing: [0.83, 0.01, 0.47, 0.59],\n    settings: initialState.coordinates,\n  });\n\n  // active\n  const active = () => {\n    return Array.isArray(items) && (items && items.filter((item:any) => item === letter).length > 0);\n  };\n\n  // on select\n  const onSelect = useCallback((values: any) => {\n    updateLetterItem(index, { instance: { ...values }});\n    setInstanceValue(values, element.current);\n  }, [ index, updateLetterItem, setInstanceValue ]);\n\n  // on select settings\n  const onSelectSettings = useCallback((values: any) => {\n    updateLetterItem(index, { settings: { ...values }});\n  }, [ index, updateLetterItem ]);\n\n  // use effect\n  useEffect(() => {\n    if (Array.isArray(items)) {\n      const check = items.filter((item:any) => item.index === index);\n\n      if (check.length > 0) {\n        setLetter(check[0]);\n      }\n    }\n  }, [ items, index, setLetter ]);\n\n  // render\n  return (\n    <div\n      className=\"letter\"\n      ref={element}\n      data-active={active()}\n      data-type={type}>\n\n      <p className=\"letter--text\" onClick={() => onChange(letter)}>{text}</p>\n\n      {type === 2 && <LetterType\n        instances={fvar instanceof Object ? fvar.instances : []}\n        current={letter.settings}\n        onSelect={onSelectSettings}\n        setInstanceValue={setInstanceValue}\n        text={text}\n        key={1} />}\n\n      {type === 2 && <LetterType\n        instances={fvar instanceof Object ? fvar.instances : []}\n        current={letter.instance}\n        onSelect={onSelect}\n        setInstanceValue={setInstanceValue}\n        text={text}\n        key={2} />}\n\n      {type === 3 &&\n        <LetterItemAnimation\n          letter={letter}\n          text={text}\n          textProperties={textProperties}\n          setInstanceValue={setInstanceValue} />}\n\n      {type === 2 && active() &&\n        <div className=\"letter--easing\">\n          <BezierEditor \n            height={200}\n            curveColor=\"red\"\n            width={330}\n            defaultValue={letter.easing}\n            readOnly />\n        </div>}\n    </div>\n  );\n};\n\nexport default memo(Letter);","import React, { memo, FunctionComponent } from 'react';\n\nimport { IFontInfo } from '../../providers/FontSettingsProvider/interfaces';\nimport { IWord } from './interfaces';\n\nimport Letter from '../Letter';\n\nimport './word.scss';\n\n// word\nconst Word: FunctionComponent<IWord> = ({ font, word, letters, getFvarTable, index, type, onChange }) => {\n  // text split\n  const getWord = (font: IFontInfo, word: string = '') => {\n    const items:any = [];\n\n    for (let i = 0; i < word.length; i++) {\n      const item: any = word[i];\n\n      for (let k = 0; k < item.length; k++) {\n        const character = item[k];\n        //${value}-${lett-1}-${index.toString()[0]}\n\n        items.push(<Letter\n          items={letters}\n          fvar={getFvarTable(font)}\n          text={character}\n          index={`${character}-${i}-${k}`}\n          key={`${character}-${i}-${k}`}\n          type={type}\n          onChange={onChange} />);\n      }\n\n      if (i === (word.length - 1)) {\n        items.push(<Letter\n          items={letters}\n          fvar={getFvarTable(font)}\n          text={'\\u00A0'}\n          type={1}\n          key={1}\n          index={1}\n          onChange={() => {}} />);\n      }\n    }\n\n    return items;\n  };\n\n  // render\n  return (\n    <div className=\"word\">{getWord(font, word)}</div>\n  );\n};\n\nexport default memo(Word);","import React, { createContext, FunctionComponent, memo, useState, useCallback } from 'react';\n\nimport { ILettersContext, ILettersProvider } from './interfaces';\nimport { IFontInfo } from '../FontSettingsProvider/interfaces';\n\nimport Word from '../../components/Word';\n\n// letter context\nconst LettersContext = createContext({} as ILettersContext);\n\n// letters provider\nconst LettersProvider: FunctionComponent<ILettersProvider> = ({ children }) => {\n  // state\n  const [ letters, setLetters ]:any = useState([]);\n\n  // get align\n  const getAlign = useCallback((value: string) => {\n    switch (value) {\n      case 'right':\n        return 'flex-end';\n      case 'center':\n        return 'center';\n      default:\n        return 'flex-start';\n    }\n  }, []);\n\n  // get element\n  const getLetter = useCallback((index: number) => {\n    if (letters.length > 0) {\n      return letters.filter((item:any) => item.index === index)[0];\n    }\n\n    return false;\n  }, [ letters ]);\n\n  // set letter item\n  const setLetterItem = useCallback((lett: any) => {\n    if (lett instanceof Object === false) return false;\n\n    const letter = getLetter(lett.index);\n    \n    if (letter instanceof Object) {\n      setLetters(letters.filter((item: any) => item !== letter));\n    } else {\n      setLetters([...letters, lett]);\n    }\n  }, [ letters, setLetters, getLetter ]);\n\n  // update letter\n  const updateLetterItem = useCallback((index: number, value: any) => {\n    const item = getLetter(index);\n\n    if (item instanceof Object) {\n      const items = letters;\n      items[items.indexOf(item)] = { ...item, ...value };\n\n      setLetters([\n        ...items\n      ]);\n    }\n  }, [ letters, setLetters, getLetter ]);\n\n  // get array words\n  const getCountWords = useCallback((str: string) => {\n    return str?.trim().split(' ');\n  }, []);\n\n  // get array line break\n  const getLineBreak = useCallback((str: string) => {\n    return str?.split(/\\r?\\n/);\n  }, []);\n\n  // text word letters array\n  const textWordLetterArray = useCallback((text: string = '') => {\n    const items:any = [];\n    const breaks = getLineBreak(text);\n    \n    for (let k = 0; k < breaks.length; k++) {\n      const textLine = breaks[k];\n      const words: any = getCountWords(textLine);\n\n      for (let i = 0; i < words.length; i++) {\n        items.push({ character: 1, item: words[i], index: `${k}${i}` });\n      }\n\n      items.push({ character: 2, item: {} });\n    }\n\n    return items;\n  }, [ getCountWords, getLineBreak ]);\n\n  // text word letter\n  const textWordLetter = useCallback((font: IFontInfo, text: string = '', getFvarTable: any, onChange: any, type: any) => {\n    const elements: any[] = [];\n    const words: any[]  = textWordLetterArray(text);\n\n    for (let i = 0; i < words.length; i++) {\n      const { character, item, index } = words[i];\n\n      switch (character) {\n        case 2:\n          elements.push(<div className=\"separator\" key={`separator${i}`}></div>)\n          break;\n        case 1:\n        default:\n          elements.push(<Word\n            index={i}\n            key={index}\n            font={font}\n            word={item}\n            letters={letters}\n            getFvarTable={getFvarTable}\n            type={type}\n            onChange={onChange} />);\n          break;\n      }\n    }\n\n    return elements;\n  }, [ letters, textWordLetterArray ]);\n  \n  // render\n  return (\n    <LettersContext.Provider value={{\n      letters,\n      setAll: setLetters,\n      setLetters: setLetterItem,\n      getLetter,\n      updateLetterItem,\n      getCountWords,\n      getLineBreak,\n      getAlign,\n      textWordLetter,\n      textWordLetterArray,\n    }}>\n      {children}\n    </LettersContext.Provider>\n  );\n};\n\nexport { LettersContext, LettersProvider };\nexport default memo(LettersProvider);","import React, { createContext, FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LettersContext } from '../LettersProvider';\nimport { LoadFontContext } from '../LoadFontProvider';\n\nimport useFont from '../../uses/useFont';\n\nimport { ITemplateContext, ITemplateProvider } from './interfaces';\n\n// template context\nconst TemplateContext = createContext({} as ITemplateContext);\n\n// template provider\nconst TemplateProvider: FunctionComponent<ITemplateProvider> = ({ children }) => {\n  // context\n  const loadFontContext = useContext(LoadFontContext);\n  const lettersContext = useContext(LettersContext);\n\n  // values\n  const { font } = loadFontContext;\n\n  const { getFvarTable } = useFont(font);\n  const { setAll, textWordLetterArray } = lettersContext;\n  \n  // checked index\n  const checkedIndex = useCallback((items: any[], index: string) => {\n    const result = items.filter((item: any) => item.index === index);\n    return result.length > 0;\n  }, []);\n\n  // get instances\n  const getInstances = useCallback((element: string) => {\n    const { instances } = getFvarTable(font);\n\n    if (instances instanceof Object) {\n      for (let key in instances) {\n        const item = instances[key];\n        \n        if (item instanceof Object) {\n          if (element === item.name.en) {\n            return item;\n          }\n        }\n      }\n    }\n    \n    return {};\n  }, [ getFvarTable, font ]);\n\n  // generate letters\n  const generateLetters = useCallback((items: any[]) => {\n    const letters: any[] = [];\n\n    for (let i = 0; i < items.length; i++) {\n      const { init, index, type, bezier } = items[i];\n\n      letters.push({\n        index,\n        easing: bezier,\n        instance: getInstances(type),\n        settings: getInstances(init),\n      });\n    }\n\n    return letters;\n  }, [ getInstances ]);\n\n  // generate\n  const generate = useCallback((text: string, templates: any[]) => {\n    const elements: any[] = [];\n    const words = textWordLetterArray(text).filter((item: any) => item.character === 1);\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const { item, index } = word;\n\n      const template = templates[i];\n\n      if (template) {\n        for (let k = 0; k < template.limit; k++) {\n          const lett = Math.floor((Math.random() * word.item.length) + 1); \n          const random = Math.floor((Math.random() * template.limit) + 1);\n          const value: any = item[lett - 1];\n\n          const key = `${value}-${lett-1}-${index.toString()[index.length - 1]}`;\n          const templateData = template.letters[random];\n\n          if (checkedIndex(elements, key) === false && templateData instanceof Object) {\n            elements.push({ \n              value, \n              index: key, \n              type: templateData.type,\n              bezier: template.letters[random].bezier,\n              init: template.init });\n          }\n        }\n      }\n    }\n\n    setAll(generateLetters(elements));\n  }, [ textWordLetterArray, setAll, checkedIndex, generateLetters ]);\n\n  // render\n  return (\n    <TemplateContext.Provider\n      value={{\n        generate\n      }}>\n      {children}\n    </TemplateContext.Provider>\n  );\n};\n\nexport { TemplateProvider, TemplateContext };\nexport default TemplateProvider;","import React, { createContext } from 'react';\n\nimport AnimationProvider from '../AnimationProvider';\nimport LoadFontProvider from '../LoadFontProvider';\nimport NotificationProvider from '../NotificationProvider';\nimport TextProvider from '../TextProvider';\nimport LettersProvider from '../LettersProvider';\nimport TemplateProvider from '../TemplateProvider';\n\n// Main Context\nconst MainContext = createContext({\n  active: true,\n});\n\n// Main Provider\nconst MainProvider = ({ children }: any) => {\n  // render\n  return (\n    <NotificationProvider>\n      <LoadFontProvider>\n        <AnimationProvider>\n          <TextProvider>\n            <LettersProvider>\n              <TemplateProvider>\n                <MainContext.Provider value={{ active: true, }}>\n                  {children}\n                </MainContext.Provider>\n              </TemplateProvider>\n            </LettersProvider>\n          </TextProvider>\n        </AnimationProvider>\n      </LoadFontProvider>\n    </NotificationProvider>\n  );\n};\n\nexport { MainContext, MainProvider };\nexport default MainProvider;","import React, { memo, FunctionComponent, useContext } from 'react';\nimport { Button, Col, Slider } from 'rsuite';\n\nimport { AnimationContext } from '../../providers/AnimationProvider';\n\nimport { IAnimationSlider } from './interfaces';\n\nimport './animation-slider.scss';\n\n// animation slider\nconst AnimationSlider: FunctionComponent<IAnimationSlider> = () => {\n  // context\n  const animationContext = useContext(AnimationContext);\n  const { current, setCurrent, onPlay, play } = animationContext;\n  \n  // slider\n  const onSlider = (value:number) => {\n    setCurrent(value);\n  };\n\n  // render\n  return (\n    <Col className=\"animation-slider\" xs={24}>\n      <div className=\"animation-slider--title\">\n        <p>Time Controls</p>\n      </div>\n\n      <div className=\"animation-slider--controls\">\n        <Button\n          className={play === true ? 'btn-ui active min' : 'btn-ui min'}\n          onClick={() => onPlay()}>\n          <span className=\"text\">Render</span>\n        </Button>\n      </div>  \n\n      <div className=\"animation-slider--slider\">\n        <Slider\n          onChange={onSlider}\n          min={0}\n          max={100}\n          value={parseInt(current.toString(), 10)}\n          progress\n          defaultValue={0} />\n      </div>\n    </Col>\n  );\n};\n\nexport default memo(AnimationSlider);","import React, { useCallback, memo, FunctionComponent } from 'react';\nimport { Uploader, IconButton, Icon } from 'rsuite';\n\nimport { IDragDrop } from './interfaces';\n\nimport './drag-drop.scss';\n\n// drag drop\nconst DragDrop: FunctionComponent<IDragDrop> = ({ onLoad }) => {\n  // on drop\n  const onDrop = useCallback(files => {\n    if (files.length > 0) {\n      const item = files[files.length - 1];\n\n      if (item instanceof Object) {\n        onLoad(item.blobFile);\n      }\n    }\n  }, [ onLoad ]);\n\n  // render\n  return (\n    <Uploader\n      autoUpload\n      draggable\n      accept=\".ttf\"\n      fileListVisible={false}\n      onChange={onDrop}>\n        <IconButton icon={<Icon icon=\"upload\" />} />\n    </Uploader>\n  );\n};\n\nexport default memo(DragDrop);","import React, { FunctionComponent } from 'react';\nimport { ControlLabel, Icon, Slider } from 'rsuite';\n\nimport { ITextPropertySlider } from './interfaces';\n\nimport './text-property-slider.scss';\n\n// text properties slider\nconst TextPropertySlider: FunctionComponent<ITextPropertySlider> = ({ icon, label, property, onChange, options, value }) => {\n  // render\n  return (\n    <div className=\"text-property-slider\">\n      <ControlLabel className=\"label-control\">\n        <Icon icon={icon.toString()} />{label}\n      </ControlLabel>\n      \n      <Slider\n        {...options}\n        tooltip\n        progress\n        onChange={(value: any) => onChange(value, property)} \n        value={value} />\n    </div>\n  );\n};\n\nexport default TextPropertySlider;","import React, { FunctionComponent } from 'react';\nimport { Form, Col, FormGroup, ButtonGroup, IconButton, Icon } from 'rsuite';\n\nimport TextPropertySlider from './TextPropertySlider';\n\nimport { ITextProperties } from './interfaces';\n\nimport './text-properties.scss';\n\n// text properties\nconst TextProperties: FunctionComponent<ITextProperties> = ({ textProperties, setTextProperties }) => {\n  // text\n  const { fontSize, lineHeight, letterSpacing } = textProperties;\n  \n  // on change\n  const onChange = (value: any, name: string) => {\n    const item:any = {};\n    item[name] = Number(value);\n\n    const result = { ...textProperties, ...item };\n    setTextProperties(result);\n  };\n\n  // on align\n  const onAlign = (value: string) => {\n    const result = { ...textProperties, textAlign: value };\n    setTextProperties(result);\n  };\n\n  // render\n  return (\n    <Form className=\"text-properties\">\n      <FormGroup>\n      <Col xs={24} className=\"text-properties--align\">\n          <ButtonGroup>\n            <IconButton icon={<Icon icon=\"align-left\"/>} onClick={() => onAlign('left')} />\n            <IconButton icon={<Icon icon=\"align-center\"/>} onClick={() => onAlign('center')} />\n            <IconButton icon={<Icon icon=\"align-right\"/>} onClick={() => onAlign('right')} />\n          </ButtonGroup>\n        </Col>\n        \n        <Col xs={24}>\n          <Col xs={24}>\n            <TextPropertySlider\n              icon=\"font\"\n              label=\"Font Size\"\n              property=\"fontSize\"\n              onChange={onChange}\n              options={{ defaultValue: 60, step: 1, min: 32, max: 200 }}\n              value={fontSize} />\n          </Col>\n\n          <Col xs={24}>\n            <TextPropertySlider\n              icon=\"text-height\"\n              label=\"Line Height\"\n              property=\"lineHeight\"\n              onChange={onChange}\n              options={{ defaultValue: 0.1, step: 0.1, min: 0.1, max: 2 }}\n              value={lineHeight} />\n          </Col>\n\n          <Col xs={24}>\n            <TextPropertySlider\n              icon=\"text-width\"\n              label=\"Letter Spacing\"\n              property=\"letterSpacing\"\n              onChange={onChange}\n              options={{ defaultValue: 0, step: 1, min: -20, max: 20 }}\n              value={letterSpacing} />\n          </Col>\n        </Col>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default TextProperties;","import React, { useContext, FunctionComponent } from 'react';\n\nimport { TextContext } from '../../providers/TextProvider';\n\nimport { IEditText } from './interfaces';\n\nimport TextProperties from '../../components/TextProperties';\n\nimport './edit-text.scss';\n\n// edit\nconst Edit: FunctionComponent<IEditText> = ({ font }) => {\n  // context\n  const textContext = useContext(TextContext);\n  const { textProperties, setTextProperties } = textContext;\n\n  // render\n  return (\n    <div className=\"edit-text\">\n      <TextProperties textProperties={textProperties} setTextProperties={setTextProperties} />\n    </div>\n  );\n};\n\nexport default Edit;","import React, { FunctionComponent } from 'react';\nimport { Form, FormGroup, FormControl } from 'rsuite';\n\nimport { IInputText } from './interfaces';\n\nimport './input-text.scss';\n\n// input text\nconst InputText: FunctionComponent<IInputText> = ({ label, setText, text }) => {\n  // render\n  return (\n    <Form className=\"input-text\">\n      <FormGroup className=\"input-text--text\">\n        <label className=\"label\">{label}</label>\n\n        <FormControl\n          placeholder={label}\n          name=\"text\"\n          componentClass=\"textarea\"\n          value={text}\n          onChange={value => setText(value.toString().toUpperCase())} />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default InputText;","import React, { useCallback, useEffect, useRef, useState, Fragment, FunctionComponent } from 'react';\n\nimport { useSpring, animated as a } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\n\nimport { ISliderGallery } from './interfaces';\n\n// slider gallery\nconst SliderGallery: FunctionComponent<ISliderGallery> = ({ className, current, children, width, onPrevNext }) => {\n  // element\n  const gallery: any = useRef(null);\n\n  // state scroll\n  const [ props, set ] = useSpring(() => ({ x: 0 }));\n  const [ scrollProps, setScrollProps ] = useState({ display: 'none', width: 0 });\n  \n  // parent width\n  const parentWidth = useCallback(() => {\n    if (gallery instanceof Object === false) return false;\n\n    const current = gallery.current;\n    \n    if (current instanceof Object) {\n      const containerWidth = current.getBoundingClientRect().width;\n      const container = current.querySelector('.content').getBoundingClientRect();\n\n      return {\n        diff: Math.floor(containerWidth - container.width),\n        galleryWidth: container.width,\n        containerWidth: containerWidth,\n        widthElement: width\n      }\n    }\n\n    return false;\n  }, [ width, gallery ]);\n\n  // bar scroll width\n  const barScrollWidth = useCallback(() => {\n    const properties = parentWidth();\n      \n    if (properties instanceof Object) {\n      const { diff, galleryWidth } = properties;\n\n      if (diff) {\n        const percent = ((100 * diff) / galleryWidth) * -1;\n\n        if (diff < 0) return `${percent}%`;\n      }\n    }\n\n    return 0;\n  }, [ parentWidth ]);\n\n  // scroll move\n  const scrollMove = useCallback((value: number) => {\n    const properties = parentWidth();\n    \n    if (properties instanceof Object) {\n      const { containerWidth } = properties;\n      const percentPosition = ((100 * value) / containerWidth) * -1;\n\n      return `${percentPosition}%`;\n    }\n\n    return 0;\n  }, [ parentWidth ]);\n\n  // drag\n  const drag = useDrag(({ down, movement: [mx], direction: [xDir], distance }) => {\n    if (distance > width / 2) {\n      const direction = xDir > 0 ? -1 : 1;\n\n      if (!down) onPrevNext(direction > 0 ? 'next' : 'prev', parentWidth);\n    }\n  });\n\n  // check scroll\n  const checkScroll = useCallback((current, setScrollProps, gallery) => {\n    const widthScroll = barScrollWidth();\n    const element = gallery.current.parentNode;\n    \n    if (widthScroll === 0) {\n      set({ x: 0 });\n      element.setAttribute('data-controls', 'l');\n      return setScrollProps({ display: 'none', width: 0 });\n    } else {\n      if (current > 0) {\n        const { diff, widthElement, containerWidth, galleryWidth }: any = parentWidth();\n\n        if (diff) {\n          const pos = widthElement * current;\n          const position = pos * -1;\n\n          if (position > (containerWidth - galleryWidth)) {\n            element.setAttribute('data-controls', '');\n            set({ x: position });\n          } else {\n            set({ x: containerWidth - galleryWidth });\n            element.setAttribute('data-controls', 'r');\n          }\n        }\n      } else {\n        element.setAttribute('data-controls', 'l');\n        set({ x: 0 });\n      }\n    }\n\n    return setScrollProps({ display: 'inline-block', width: widthScroll });\n  }, [ barScrollWidth, set, parentWidth ]);\n\n  // use effect\n  useEffect(() => {\n    if (gallery.current instanceof Object) {\n      checkScroll(current, setScrollProps, gallery);\n    }\n  }, [ current, children, setScrollProps, checkScroll ]);\n\n  // render\n  return (\n    <Fragment>\n      <a.div\n        {...drag()}\n        className={`${className}--list`}\n        ref={gallery}>\n        <a.div\n          className=\"content\"\n          style={{\n            transform: props.x.interpolate(x => `translate3d(${x}px,0,0)`),\n            width: children.length * width\n          }}>\n          {children && children.map((Child: any) => Child)}\n        </a.div>\n      </a.div>\n\n      <div \n          className={`${className}--scroll`}\n          style={{ display: scrollProps.display }}>\n          <a.div\n            className=\"bar\"\n            style={{\n              left: props.x.interpolate(x => scrollMove(x)),\n              ...scrollProps }}>\n          </a.div>\n        </div>\n    </Fragment>\n  );\n};\n\nexport default SliderGallery;","import React, { FunctionComponent, useContext, useCallback } from 'react';\n\nimport { TemplateContext } from '../../providers/TemplateProvider';\nimport { TextContext } from '../../providers/TextProvider';\n\nimport SliderGallery from '../Slider/Gallery';\nimport SliderBase from '../Slider/Base';\n\nimport { IGalleryTemplates } from './interfaces';\n\nimport './gallery-templates.scss';\n\n// gallery templates\nconst GalleryTemplates: FunctionComponent<IGalleryTemplates> = ({ current, items, onPrevNext, text }) => {\n  // context\n  const templateContext = useContext(TemplateContext);\n  const textContext = useContext(TextContext);\n\n  const { generate } = templateContext;\n  const { setTextProperties } = textContext;\n\n  // select template\n  const selectTemplate = useCallback((text, template, textProperties) => {\n    setTextProperties(textProperties);\n    generate(text, template);\n  }, [ generate, setTextProperties ]);\n  \n  // render\n  return (\n    <div className=\"gallery-templates\">\n      <SliderGallery\n        className=\"gallery-templates--item-slider\"\n        current={current}\n        onPrevNext={onPrevNext}\n        width={160}>\n          {items && items.map(({ image, template, textProperties }: any, key: number) =>\n            <div\n              className=\"gallery-templates--item-element\"\n              key={key}\n              onClick={() => selectTemplate(text, template, textProperties)}>\n                <img src={image} alt=\"template\" />\n              </div>)}\n      </SliderGallery>\n    </div>\n  );\n};\n\nexport default SliderBase(GalleryTemplates);","import React from 'react';\n\n// Slider HOC\nexport default function SliderBase(Component: any) {\n  // base\n  const base: any = class extends React.Component {\n    // constructor\n    constructor (props: any) {\n      super(props);\n\n      this.state = {\n        direction: 'none',\n        current: 0,\n        last: undefined,\n      };\n\n      this.onPrevNext = this.onPrevNext.bind(this);\n      this.setCurrent = this.setCurrent.bind(this);\n    }\n\n    // component did mount\n    componentDidMount() {\n      const { items }: any = this.props;\n\n      this.setState({\n        items,\n      });\n    }\n\n    // set current\n    setCurrent (index: number) {\n      if (isNaN(index) === true) return false;\n\n      const { current }: any = this.state;\n\n      this.setState({\n        last: current,\n        direction: (index > current) ? 'prev' : 'next',\n        current: index,\n      });\n    }\n\n    // on prev next\n    onPrevNext (dir: string) {\n      let index;\n      const { current }: any = this.state;\n      const { items }: any = this.props;\n\n      if (dir === 'prev') {\n        index = (current - 1) < 0 ? items.length - 1 : current - 1;\n      } else {\n        index = (current + 1) >= items.length ? 0 : current + 1;\n      }\n      \n      this.setState({\n        last: current,\n        current: index,\n        direction: dir,\n      });\n    }\n\n    // render\n    render () {\n      return (\n        <Component\n          {...this.state}\n          {...this.props}\n          onPrevNext={this.onPrevNext}\n          setCurrent={this.setCurrent}\n        />\n      );\n    }\n  };\n\n  base.displayName = `SliderBase(${Component.displayName || Component.name})`;\n\n  return base;\n};\n","import React from 'react';\nimport { Col } from 'rsuite';\n\nimport { IFontLoad } from './interfaces';\n\nimport './font-load.scss';\n\n// header name\nconst FontLoad = ({ names }: IFontLoad) => {\n  // name\n  const { fontFamily, version } = names;\n\n  // render\n  return (\n    <Col className=\"font-load\" xs={24}>\n      <Col className=\"font-load--content\" xs={24}>\n        <p className=\"label\">Font Family</p>\n\n        <p className=\"name\">{fontFamily.en}</p>\n        <p className=\"version\">{version.en}</p>\n      </Col>\n    </Col>\n  );\n};\n\nexport default FontLoad;","import React, { memo, FunctionComponent } from 'react';\n\nimport FontLoad from '../FontLoad';\n\nimport { ILoad } from './interfaces';\n\nimport './load.scss';\n\n// load\nconst Load: FunctionComponent<ILoad> = ({ font }) => {\n  // render\n  return (\n    <div className=\"load\">\n      {font && <FontLoad names={font.names} />}\n    </div>\n  );\n};\n\nexport default memo(Load);","import React, { memo, useContext, FunctionComponent } from 'react';\nimport { Col } from 'rsuite';\n\nimport { LettersContext } from '../../providers/LettersProvider';\nimport useFont from '../../uses/useFont';\n\nimport { IPreview } from './interfaces';\n\nimport './preview.scss';\n\n// preview\nconst Preview: FunctionComponent<IPreview> = ({ font, text, textProperties }) => {\n  // context\n  const lettersContext = useContext(LettersContext);\n\n  // props context\n  const { getFvarTable } = useFont(font);\n  const { textWordLetter, getAlign }:any = lettersContext;\n  \n  // render\n  return (\n    <div className=\"preview\">\n      <Col className=\"preview--content\" style={{...textProperties, justifyContent: getAlign(textProperties.textAlign) }}>\n        {font && textWordLetter(font, text, getFvarTable, () => {}, 3)}\n      </Col>\n\n      <canvas id=\"preview-canvas\" width=\"1920\" height=\"1080\" />\n      <video />\n    </div>\n  );\n};\n\nexport default memo(Preview);","import React, { memo, useCallback, useRef, useContext, FunctionComponent } from 'react';\nimport { Col } from 'rsuite';\n\nimport { LettersContext } from '../../providers/LettersProvider';\nimport useFont from '../../uses/useFont';\n\nimport { ISelectLetters } from './interfaces';\n\nimport './select-letters.scss';\n\n// preview\nconst SelectLetters: FunctionComponent<ISelectLetters> = ({ font, text }) => {\n  // context\n  const lettersContext = useContext(LettersContext);\n  const { letters, setLetters, textWordLetter } = lettersContext;\n\n  // uses\n  const { getFvarTable } = useFont(font);\n  \n  // element\n  const element = useRef(null);\n\n  // set letter\n  const setLetter = useCallback((letter: number) => setLetters(letter), [ setLetters ]);\n  \n  // render\n  return (\n    <div className=\"select-letters\" ref={element}>\n      <Col xs={24} className=\"select-letters--title\">\n        <p>Click to select the letter you want to transform</p>\n      </Col>\n\n      <Col xs={24} className=\"select-letters--content\">\n        {font && textWordLetter(font, text, getFvarTable, setLetter, 1)}\n      </Col>\n\n      <Col xs={24}  className=\"select-letters--count\">\n        <p><strong>{letters.length}</strong> letters</p>\n      </Col>\n    </div>\n  );\n};\n\nexport default memo(SelectLetters);","import React, { memo, useContext, FunctionComponent } from 'react';\nimport { Col, Message } from 'rsuite';\n\nimport { LettersContext } from '../../providers/LettersProvider';\n\nimport useFont from '../../uses/useFont';\n\nimport { ISelectFinalState } from './interfaces';\n\nimport './select-final-state.scss';\n\n// select-final-state\nconst SelectFinalState: FunctionComponent<ISelectFinalState> = ({ font, text, textProperties }) => {\n  // context\n  const lettersContext = useContext(LettersContext);\n\n  // props context\n  const { getFvarTable } = useFont(font);\n  const { letters, textWordLetter }:any = lettersContext;\n  \n  // render\n  return (\n    <div className=\"select-final-state\">\n      <Col className=\"select-final-state--title\" xs={24}>\n        <p>Select the final stage to letter</p>\n\n        {!letters.length && <Message\n          type=\"error\"\n          description={<p>Select at least one letter in the previous section.</p>} />}\n      </Col>\n      <Col className=\"select-final-state--content\" style={{...textProperties}}>\n        {font && textWordLetter(font, text, getFvarTable, (e: any) => console.log(e), 2)}\n      </Col>\n    </div>\n  );\n};\n\nexport default memo(SelectFinalState);","import React, { useContext, useState, useEffect } from 'react';\nimport { FlexboxGrid, Drawer, Button, ButtonToolbar, Icon } from 'rsuite';\n\nimport { LoadFontContext } from '../../providers/LoadFontProvider';\nimport { TextContext } from '../../providers/TextProvider';\n\nimport AnimationSlider from '../../components/AnimationSlider';\nimport DragDrop from '../../components/DragDrop';\nimport EditText from '../../components/EditText';\nimport InputText from '../../components/InputText';\nimport GalleryTemplates from '../../components/GalleryTemplates';\nimport Load from '../../components/Load';\nimport Preview from '../../components/Preview';\nimport SelectLetters from '../../components/SelectLetters';\nimport SelectFinalState from '../../components/SelectFinalState';\n\n// content\nconst Content = () => {\n  // state\n  const [ items, setItems ]: any = useState([]);\n  const [ pro, setPro ]: any = useState(false);\n  const [ textPro, setTextPro ]: any = useState(false);\n\n  // context\n  const fontContext = useContext(LoadFontContext);\n  const textContext = useContext(TextContext);\n  \n  // font\n  const { font, onLoad } = fontContext;\n  const { text, setText, textProperties } = textContext;\n\n  useEffect(() => {\n    const load = async () => {\n      fetch(`${process.env.PUBLIC_URL}/template.json`)\n        .then((res) => res.json())\n        .then((data) => setItems(data));\n    };\n\n    load();\n  }, []);\n\n  // render\n  return (\n    <FlexboxGrid justify=\"center\">\n      <FlexboxGrid.Item colspan={9}>\n        <Load font={font} />\n      </FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={9}>\n        <ButtonToolbar>\n          <DragDrop onLoad={onLoad} />\n\n          <Button onClick={() => setPro(true)}>\n            <Icon icon=\"gear-circle\" />\n          </Button>\n\n          <Button onClick={() => setTextPro(true)}>\n            <Icon icon=\"font\" />\n          </Button>\n        </ButtonToolbar>\n      </FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={9}>\n        <InputText label=\"Type here to text\" setText={setText} text={text} />\n      </FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={9}>\n        <label className=\"label\">Gallery</label>\n        <GalleryTemplates items={items} text={text} />\n      </FlexboxGrid.Item>\n      \n      <FlexboxGrid.Item colspan={18}>\n        <AnimationSlider />\n        <Preview font={font} text={text} textProperties={textProperties} />\n      </FlexboxGrid.Item>\n\n      <Drawer\n          size={'xs'}\n          placement={'right'}\n          show={pro}\n          onHide={() => setPro(false)}>\n            <Drawer.Header>\n              <Drawer.Title>Advanced Properties</Drawer.Title>\n            </Drawer.Header>\n            <Drawer.Body>\n              <SelectLetters font={font} text={text} />\n              <SelectFinalState\n                font={font}\n                text={text}\n                textProperties={textProperties} />\n            </Drawer.Body>\n            <Drawer.Footer>\n              <Button onClick={() => setPro(false)} appearance=\"primary\">\n                Confirm\n              </Button>\n              <Button onClick={() => setPro(false)} appearance=\"subtle\">\n                Cancel\n              </Button>\n          </Drawer.Footer>\n        </Drawer>\n\n      <Drawer\n        size={'xs'}\n        placement={'right'}\n        show={textPro}\n        onHide={() => setTextPro(false)}>\n          <Drawer.Header>\n            <Drawer.Title>Text properties</Drawer.Title>\n          </Drawer.Header>\n          <Drawer.Body>\n            <EditText font={font} />\n          </Drawer.Body>\n          <Drawer.Footer>\n            <Button onClick={() => setTextPro(false)} appearance=\"primary\">\n              Confirm\n            </Button>\n            <Button onClick={() => setTextPro(false)} appearance=\"subtle\">\n              Cancel\n            </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </FlexboxGrid>\n  );\n};\n\nexport default Content;","import React, { FunctionComponent } from 'react';\nimport { Container } from 'rsuite';\n\nimport MainProvider from '../../providers/MainProvider';\n\nimport Content from '../Content';\n\nimport { IMain } from './interfaces';\n\nimport './main.scss';\n\n// main\nconst Main:FunctionComponent<IMain> = () => {\n  // render\n  return (\n    <MainProvider>\n      <Container>\n        <Content />\n      </Container>\n    </MainProvider>\n  );\n};\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './layout/Main';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}