{"version":3,"sources":["uses/useRequestAnimation.tsx","helpers/index.tsx","helpers/render/view.tsx","helpers/render/canvas.tsx","providers/AnimationProvider/index.tsx","providers/NotificationProvider/index.tsx","providers/FontSettingsProvider/index.tsx","uses/useFont.tsx","providers/LoadFontProvider/index.tsx","providers/TextProvider/index.tsx","components/Letter/LetterItemAnimation/index.tsx","components/Letter/LetterItem/index.tsx","components/Letter/LetterType/index.tsx","components/Letter/index.tsx","components/Word/index.tsx","providers/LettersProvider/index.tsx","providers/TemplateProvider/index.tsx","providers/MainProvider/index.tsx","components/AnimationSlider/index.tsx","components/DragDrop/index.tsx","components/TextProperties/TextPropertySlider/index.tsx","components/TextProperties/index.tsx","components/EditText/index.tsx","components/InputText/index.tsx","components/Slider/Gallery/index.tsx","components/GalleryTemplates/index.tsx","components/Slider/Base/index.tsx","components/FontLoad/index.tsx","components/Load/index.tsx","components/Preview/index.tsx","components/SelectLetters/index.tsx","components/SelectFinalState/index.tsx","layout/Content/index.tsx","layout/Main/index.tsx","serviceWorker.ts","index.tsx"],"names":["renderCanvas","load","current","animate","this","renderView","chunks","mediaRecorder","videoStream","canvas","Object","captureStream","MediaRecorder","video","document","querySelector","ondataavailable","data","size","push","onstop","blob","Blob","videoURL","URL","createObjectURL","src","onloadeddata","generateVideo","scale","window","devicePixelRatio","ctx","getContext","letters","body","querySelectorAll","previewContent","clearRect","beginPath","getBoundingClientRect","x","y","forEach","letter","img","width","height","drawImage","click","capture","state","console","log","start","stop","resetAnimation","canvasDrawing","recorder","aab","formData","FormData","append","axios","method","url","process","headers","then","e","catch","a","createElement","style","display","href","download","appendChild","removeChild","postBlob","useRequestAnimation","callback","requestRef","useRef","requestAnimationFrame","previousTimeRef","useState","play","setPlay","timestamp","ms","Date","now","render","onStop","cancelAnimationFrame","useEffect","onPlay","AnimationContext","createContext","memo","children","setCurrent","requestAnimation","deltaTime","animation","percent","parseFloat","toString","toFixed","onChange","useCallback","value","Provider","NotificationContext","NotificationProvider","notificationBasic","title","description","Notification","open","duration","notificationSuccess","notificationError","FontSettingsContext","font","getFvarTable","settings","setSettings","coordinates","name","en","initialState","setInitialState","setNamedInstance","setts","setInstanceValue","element","cssProperties","keys","map","key","fontVariationSettings","join","setNamedInstanceValue","item","setMainInstance","useFont","tables","getNamedInstance","i","fvar","instances","getNamedInstanceSetting","index","values","axes","length","tag","LoadFontContext","notificationContext","useContext","setFont","Uint8ToString","u8a","c","String","fromCharCode","apply","subarray","setFontFace","fontBuffer","base","base64","encode","Uint8Array","fontFace","names","fontFamily","getElementById","textContent","onReadFile","file","reader","FileReader","onload","target","result","opentype","parse","err","error","onerror","readAsArrayBuffer","fetch","response","File","type","onLoad","TextContext","TextProvider","text","setText","fontSize","lineHeight","letterSpacing","textAlign","textProperties","setTextProperties","active","animationCanvas","parent","parentNode","setAttribute","fillStyle","textBaseline","fillText","props","instance","entries","indexTo","toValue","diff","Math","abs","val","parseInt","pos","setTimeout","className","ref","instanceFont","onSelect","onClick","selectLetter","findInstance","filter","data-active","items","fontSettingsContext","lettersContext","LettersContext","textContext","updateLetterItem","easing","setLetter","onSelectSettings","Array","isArray","check","data-type","curveColor","defaultValue","readOnly","word","getItem","getWord","k","character","setLetters","getAlign","getLetter","setLetterItem","lett","indexOf","getCountWords","str","trim","split","getLineBreak","textWordLetterArray","breaks","textLine","words","textWordLetter","elements","setAll","TemplateContext","TemplateProvider","loadFontContext","checkedIndex","getInstances","generateLetters","init","bezier","generate","templates","template","limit","floor","random","templateData","MainContext","MainProvider","animationContext","Col","xs","Button","Slider","min","max","progress","onDrop","files","blobFile","Uploader","autoUpload","draggable","accept","fileListVisible","IconButton","icon","Icon","TextPropertySlider","label","property","options","ControlLabel","tooltip","TextProperties","Number","onAlign","Form","FormGroup","ButtonGroup","step","Edit","InputText","FormControl","placeholder","componentClass","toUpperCase","SliderGallery","onPrevNext","gallery","useSpring","set","scrollProps","setScrollProps","parentWidth","containerWidth","container","galleryWidth","widthElement","barScrollWidth","properties","scrollMove","drag","useDrag","down","xDir","movement","direction","distance","checkScroll","widthScroll","position","div","transform","interpolate","Child","left","SliderBase","Component","last","undefined","bind","setState","isNaN","dir","React","displayName","selectTemplate","image","alt","FontLoad","version","justifyContent","id","Message","Content","setItems","pro","setPro","textPro","setTextPro","fontContext","res","json","FlexboxGrid","justify","Item","colspan","ButtonToolbar","Drawer","placement","show","onHide","Header","Title","Body","Footer","appearance","EditText","Main","Container","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a036897e.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from 'react';\n\nimport RenderCanvas from '../helpers';\n\n// render canvas\nconst renderCanvas: any = new RenderCanvas();\n\n// use animation frame\nconst useRequestAnimation = (callback: any):any => {\n  // refs\n  const requestRef:any = useRef(window.requestAnimationFrame);\n  const previousTimeRef:any = useRef();\n  \n  // state\n  const [ play, setPlay ]:any = useState(false);\n\n  let start:any = null;\n  const total: any = process.env.REACT_APP_FONT_TIME || 0;\n  \n  // animate\n  const animate = (timestamp: number) => {\n    const ms: number = Date.now() - start;\n    \n    if (ms < total) {\n      callback(ms);\n      renderCanvas.render(ms, true);\n      requestRef.current = requestAnimationFrame(animate);\n    } else {\n      onStop();\n    }\n\n    previousTimeRef.current = timestamp;\n  };\n\n  // on play\n  const onPlay = () => {\n    start = Date.now();\n    requestRef.current = requestAnimationFrame(animate);\n    renderCanvas.render(0, true);\n    \n    setPlay(true);\n  };\n\n  // stop\n  const onStop = () => {\n    cancelAnimationFrame(requestRef.current);\n    renderCanvas.render(0);\n\n    setPlay(false);\n  };\n  \n  // use effect\n  useEffect(() => {\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n\n  return {\n    play,\n    setPlay,\n    onPlay,\n    onStop\n  };\n};\n\nexport default useRequestAnimation;","import View from './render/view';\n\n// render letters\nexport default class RenderCanvas extends View {\n  // constructor\n  constructor () {\n    super();\n\n    this.load();\n  }\n\n  // render\n  render (current: number, animate: boolean = false) {\n    this.renderView(current, animate);\n  }\n}","import CanvasRecord from './canvas';\n\n/**\n * View\n */\nexport default class View extends CanvasRecord {\n  public chunks: any[];\n  public mediaRecorder: any;\n  public videoStream: any;\n\n  constructor() {\n    super();\n\n    this.chunks = [];\n  }\n\n  // capture\n  capture (canvas: any) {\n    if (canvas instanceof Object === false) return false;\n\n    this.videoStream = this.canvas.captureStream(29,97);\n    this.mediaRecorder = new MediaRecorder(this.videoStream);\n\n    const video:any = document.querySelector('video');\n\n    this.mediaRecorder.ondataavailable = ({ data }: any) => data.size > 0 ? this.chunks.push(data) : null;\n\n    this.mediaRecorder.onstop = () => {\n      const blob = new Blob(this.chunks, { 'type' : 'video/mp4; codecs=\"avc1.4d002a\"' });\n      this.chunks = [];\n      \n      const videoURL: any = URL.createObjectURL(blob);\n      \n      video.src = videoURL;\n      video.onloadeddata = () => this.generateVideo(blob);\n    };\n  }\n\n  // canvas drawing\n  canvasDrawing () {\n    const margin: number = 256;\n    const scale = window.devicePixelRatio;\n    const ctx: any = this.canvas?.getContext('2d');\n\n    ctx.scale(scale, scale);\n\n    if (ctx instanceof Object) {\n      const letters = document.body.querySelectorAll('.letter-item-animation canvas');\n      const previewContent = document.body.querySelector('.preview--content');\n\n      ctx.clearRect(0, 0, 1920, 1080);\n      ctx.beginPath();\n      \n      if (letters instanceof Object) {\n        const { x, y }: any = previewContent?.getBoundingClientRect();\n\n        letters.forEach((letter: any) => {\n          if (letter instanceof Object) {\n            const img = letter.getBoundingClientRect();\n\n            if (img.width && img.height) {\n              ctx.drawImage(letter, (margin + img.x) - x, img.y - (y / 2), img.width, img.height);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  // resetAnimation\n  resetAnimation () {\n    const btn = document.querySelector('.btn-reset') as HTMLButtonElement;\n    btn.click();\n  }\n\n  // render\n  renderView (current: number, animate: boolean) {\n    if (!this.canvas) {\n      this.canvas = document.body.querySelector('#preview-canvas');\n      this.capture(this.canvas);\n    }\n    \n    if (animate === true) {\n      if (this.mediaRecorder instanceof Object && this.mediaRecorder.state !== 'recording') {\n        console.log('play');\n        this.mediaRecorder.start();\n      }\n    } else if (this.mediaRecorder.state !== 'inactive') {\n      this.mediaRecorder.stop();\n      this.capture(this.canvas);\n\n      this.resetAnimation(); // click to element react\n    }\n\n    this.canvasDrawing();\n  }\n}","import axios from 'axios';\n\nexport default class CanvasRecord {\n  public canvas: any;\n  public recorder: any;\n\n  public aab: any;\n\n  // constructor\n  constructor() {\n    this.canvas = document.body.querySelector('#preview-canvas');\n    this.aab = [];\n  }\n\n  // load\n  load () {\n    this.canvas = document.body.querySelector('#preview-canvas');\n  }\n\n  // post blob\n  postBlob(blob: any) {\n    let formData = new FormData();\n    formData.append('file', blob);\n\n    const url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000' : process.env.REACT_APP_URL_SERVER;\n\n    axios({\n      method: 'POST',\n      url: `${url}/upload-video`,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    })\n    .then(e => console.log(e))// this.download(`${url}/output`))\n    .catch(e => console.log(e));\n  }\n\n  // download\n  download(url: any) {\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'video';\n    document.body.appendChild(a);\n    a.click();\n    \n    document.body.removeChild(a);\n    const btn = document.querySelector('.btn-reset') as HTMLButtonElement;\n    btn.click();\n  }\n\n  // generate video\n  generateVideo (blob: any) {\n    this.postBlob(blob);\n  }\n}","import React, { createContext, useState, FunctionComponent, memo, useCallback } from 'react';\n\nimport useRequestAnimation from '../../uses/useRequestAnimation';\n\nimport { IAnimationContext, IAnimationProvider } from './interfaces';\n\n// animation context\nconst AnimationContext = createContext({} as IAnimationContext);\n\n// animation provider\nconst AnimationProvider: FunctionComponent<IAnimationProvider> = ({ children }: any) => {\n  // text\n  const [ current, setCurrent ]:any = useState(0);\n\n  // animation\n  const animation = (deltaTime: number) => {\n    const delayInit: number = 0.110;\n    const animation: number = deltaTime * 0.001;\n\n    if (animation >= delayInit) {\n      setCurrent(() => {\n        const percent = ((deltaTime - delayInit) / 940) * 100;\n\n        if (percent > 100) {\n          return 100;\n        }\n\n        return parseFloat(percent.toString()).toFixed(2);\n      });\n    } else {\n      return 0;\n    }\n};\n\n  // animation\n  const requestAnimation = useRequestAnimation(animation);\n  const { play, setPlay, onPlay, onStop } = requestAnimation;\n\n  // play\n  const onChange = useCallback(() => {\n    const value = !play;\n\n    if (value === true) {\n      setPlay(value);\n      onPlay();\n    } else {\n      onStop();\n    }\n  }, [ onPlay, onStop, play, setPlay ]);\n\n  // render\n  return (\n    <AnimationContext.Provider value={{\n      current,\n      setCurrent,\n      play,\n      onPlay: onChange,\n    }}>\n      {children}\n    </AnimationContext.Provider>\n  );\n};\n\nexport { AnimationContext, AnimationProvider };\nexport default memo(AnimationProvider);","import React, { createContext, useCallback, FunctionComponent } from 'react';\nimport { Notification } from 'rsuite';\n\nimport { INotificationContext, INotificationProvider } from './interfaces';\n\n// notification\nconst NotificationContext = createContext({} as INotificationContext);\n\n// notification\nconst NotificationProvider: FunctionComponent<INotificationProvider> = ({ children }) => {\n  // duration\n  const duration = 5000;\n\n  // notification \n  const notificationBasic = useCallback((title: string, description: string) => {\n    Notification.open({\n      title,\n      duration,\n      description: (description),\n    });\n  }, [ duration ]);\n\n  // notification success\n  const notificationSuccess = useCallback((title: string, description: any) => {\n    Notification['info']({\n      title,\n      duration,\n      description: (description),\n    });\n  }, [ duration ]);\n\n  // notification error\n  const notificationError = useCallback((title: string, description: any) => {\n    Notification['error']({\n      title,\n      duration,\n      description: (description),\n    });\n  }, [ duration ]);\n\n  // render\n  return (\n    <NotificationContext.Provider value={{\n      notificationBasic,\n      notificationSuccess,\n      notificationError,\n    }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport { NotificationContext, NotificationProvider };\nexport default NotificationProvider;","import React, { createContext, FunctionComponent, memo, useState, useCallback, useEffect } from 'react';\n\nimport { IFontSettingsContext, IFontSettingsProvider } from './interfaces';\n\n// Load Font Context\nconst FontSettingsContext = createContext({} as IFontSettingsContext);\n\n// Load Font Provider\nconst FontSettingsProvider: FunctionComponent<IFontSettingsProvider> = ({ children, font, getFvarTable }) => {\n  // axes\n  const [ settings, setSettings ]: any = useState();\n  const [ initialState, setInitialState ]:any = useState({\n    coordinates: { name: { en: 'Neutra' }, coordinates: { 'wdth': 30, 'wght' :0 } }\n  });\n\n  // set named instance\n  const setNamedInstance = useCallback((setts: any) => {\n    setSettings({...settings, ...setts });\n  }, [ setSettings, settings ]);\n\n  // set css instance value\n  const setInstanceValue = useCallback((settings: any[], element: any) => {\n    if (settings instanceof Object === false) return false;\n\n    const cssProperties = Object.keys(settings).map((key: any) => `'${key}' ${settings[key]}`);\n  \n    if (cssProperties && element instanceof Object) {\n      const css:any = element.style as StyleSheet;\n      css.fontVariationSettings = cssProperties.join();\n    }\n\n    return true;\n  }, []);\n\n  // set name instance value\n  const setNamedInstanceValue = useCallback((item: any, element: any) => {\n    const fvar = getFvarTable(font);\n\n    if (fvar) {\n      const setts = { ...settings, ...item };\n\n      if (setInstanceValue(setts, element)) {\n        setSettings(setts);\n      }\n    }\n  }, [ settings, getFvarTable, setInstanceValue, font ]);\n\n  // set main instance\n  const setMainInstance = useCallback((setts: any) => {\n    setInstanceValue(setts, document.body);\n    setInitialState(setts);\n  }, [ setInstanceValue ]);\n\n  // use effect\n  useEffect(() => {\n    const load = () => {\n      const body:any = document.body;\n      const cssProperties = '\"wdth\" 30, \"wght\" 0';\n  \n      if (body instanceof Object) {\n        const css:any = body.style as StyleSheet;\n        css.fontVariationSettings = cssProperties;\n      }\n    };\n\n    load();\n  }, [ font ]);\n\n  // render\n  return (\n    <FontSettingsContext.Provider value={{\n      settings,\n      setNamedInstance,\n      setNamedInstanceValue,\n      setInstanceValue,\n      initialState,\n      setInitialState: setMainInstance\n    }}>\n      {children}\n    </FontSettingsContext.Provider>\n  );\n};\n\nexport { FontSettingsContext, FontSettingsProvider };\nexport default memo(FontSettingsProvider);","import { IFontInfo } from '../providers/FontSettingsProvider/interfaces';\nimport { useCallback } from 'react';\n\n// use font\nconst useFont = (font: IFontInfo) => {\n  // get fvar table\n  const getFvarTable = useCallback((font: IFontInfo) => {\n    if (font.tables) {\n      return font.tables['fvar'];\n    }\n\n    return false;\n  }, []);\n\n  // get name instance\n  const getNamedInstance = useCallback((i: number) => {\n    const fvar = getFvarTable(font);\n\n    if (fvar) {\n      return fvar.instances[i];\n    }\n\n    return null;\n  }, [ font, getFvarTable ]);\n\n  // get named instance setting\n  const getNamedInstanceSetting = useCallback((index: number) => {\n    const fvar = getFvarTable(font);\n\n    if (fvar) {\n      const settings = [];\n      const values = fvar.instances[index].coordinates;\n\n      for (let i = 0; i < fvar.axes.length; i++) {\n        settings.push(`'${fvar.axes[i].tag}' ${values[fvar.axes[i].tag].toString()}`);\n      }\n\n      return settings.join();\n    }\n\n    return null;\n  }, [ font, getFvarTable ]);\n\n  return {\n    getFvarTable,\n    getNamedInstance,\n    getNamedInstanceSetting\n  };\n};\n\nexport default useFont;","import React, { createContext, memo, useCallback, useEffect, useState, useContext, FunctionComponent } from 'react';\nimport opentype from 'opentype.js';\nimport base64 from 'base-64';\n\nimport { NotificationContext } from '../NotificationProvider';\nimport FontSettingsProvider from '../FontSettingsProvider';\n\nimport useFont from '../../uses/useFont';\n\nimport { IFontInfo } from '../FontSettingsProvider/interfaces';\nimport { ILoadFontContext, ILoadFontProvider } from './interfaces';\n\n// Load Font Context\nconst LoadFontContext = createContext({} as ILoadFontContext);\n\n// Load Font Provider\nconst LoadFontProvider: FunctionComponent<ILoadFontProvider> = ({ children }) => {\n  // context\n  const notificationContext = useContext(NotificationContext);\n  const { notificationSuccess, notificationError } = notificationContext;\n\n  // state\n  const [ font, setFont ]:any = useState<IFontInfo>();\n\n  // get f var table\n  const { getFvarTable } = useFont(font);\n\n  // uint 8 to string\n  const Uint8ToString = (u8a: any) => {\n    let CHUNK_SZ = 0x8000;\n    let c = [];\n\n    for (let i = 0; i < u8a.length; i+= CHUNK_SZ) {\n      c.push(String.fromCharCode.apply(null, u8a.subarray(i, i+CHUNK_SZ)));\n    }\n\n    return c.join('');\n  };\n\n  // set font face\n  const setFontFace = useCallback(async (font, fontBuffer) => {\n    if (document instanceof Object) {\n      const base = base64.encode(Uint8ToString(new Uint8Array(fontBuffer)));\n      const fontFace: any = `@font-face {\n        font-family: '${font.names.fontFamily.en}';\n        src: url('data:;base64,${base}') format('truetype');\n      }`;\n\n      const style: any = document.getElementById('font-load');\n      style.textContent = fontFace;\n      \n      notificationSuccess('Upload', 'The type font was successfully loaded!');\n    }\n  }, [ notificationSuccess ]);\n\n  // on read file\n  const onReadFile = useCallback((file): any => {\n    const reader = new FileReader();\n\n    reader.onload = (e: { target: any }): any => {\n      try {\n        const fontBuffer = e.target.result;\n        const font = opentype.parse(fontBuffer);\n\n        setFont(font);\n        setFontFace(font, fontBuffer);\n      } catch (err) {\n        notificationError('Erro loading', 'Verify the font file and try again!');\n        console.error(err.toString());\n      }\n    };\n\n    reader.onerror = err => {\n      notificationError('Erro loading', 'Verify the font file and try again!');\n      console.error(err.toString());\n    };\n\n    reader.readAsArrayBuffer(file);\n  }, [ setFontFace, notificationError ]);\n\n  // use effect\n  useEffect(() => {\n    const load = () => {\n      const url = `${process.env.PUBLIC_URL}${process.env.REACT_APP_FONT_DEFAULT}`;\n\n      fetch(url)\n        .then(response => response.blob())\n        .then((blob: any) => {\n          const file = new File([blob], 'font', { type: blob.type });\n\n          opentype.load(url, (err: any, font: any) => {\n            if (err) { console.log(err); return; }\n    \n            document.body.style.fontFamily = font.names.fontFamily.en;\n            setFont(font);\n          });\n          \n          onReadFile(file);\n        });\n    };\n\n    load();\n  }, [ onReadFile ]);\n\n  // render\n  return (\n    <LoadFontContext.Provider value={{\n      font,\n      onLoad: onReadFile\n      }}>\n        <FontSettingsProvider\n          font={font}\n          getFvarTable={getFvarTable}>\n          {children}\n        </FontSettingsProvider>\n    </LoadFontContext.Provider>\n  );\n};\n\nexport { LoadFontContext, LoadFontProvider };\nexport default memo(LoadFontProvider);","import React, { createContext, FunctionComponent, useState } from 'react';\n\nimport { ITextContext, ITextProvider } from './interfaces';\n\n// text content\nconst TextContext = createContext({} as ITextContext);\n\n// notification\nconst TextProvider: FunctionComponent<ITextProvider> = ({ children }) => {\n  // text\n  const [ text, setText ]:any = useState(process.env.REACT_APP_FONT_TEXT_DEFAULT);\n  const [ textProperties, setTextProperties ]:any = useState({\n    fontSize: 65,\n    lineHeight: 1,\n    letterSpacing: -10,\n    textAlign: 'left', \n  });\n\n  // render\n  return (\n    <TextContext.Provider value={{\n      text,\n      setText,\n      textProperties,\n      setTextProperties\n    }}>\n      {children}\n    </TextContext.Provider>\n  );\n};\n\nexport { TextContext, TextProvider };\nexport default TextProvider;","import React, { memo, useCallback, useContext, useEffect, useRef, FunctionComponent } from 'react';\n//import BezierEasing from 'bezier-easing';\n\nimport { AnimationContext } from '../../../providers/AnimationProvider';\n\nimport { ILetterItemAnimation } from './interfaces';\n\nimport './letter-item-animation.scss';\n\n// letter animation\nconst LetterItemAnimation: FunctionComponent<ILetterItemAnimation> = ({\n   letter,\n   text,\n   setInstanceValue,\n   textProperties,\n   active,\n   initialState,\n  }) => {\n  // context\n  const animationContext = useContext(AnimationContext);\n  const { current } = animationContext;\n\n  // element\n  const element = useRef(null);\n\n  // animation canvas\n  const animationCanvas = useCallback((element: any, text: string) => {\n    const { width, height } = element.getBoundingClientRect();\n    const padding: number = 10;\n    const parent: any = element.parentNode.querySelector('.canvas') as HTMLCanvasElement;\n\n    if (parent) {\n      const ctx = parent.getContext('2d');\n      parent.setAttribute('width', width + padding);\n      parent.setAttribute('height', height + padding);\n\n      if (ctx) {\n        ctx.clearRect(0, 0, width + padding, height + padding);\n        ctx.beginPath();\n\n        ctx.font = `${textProperties.fontSize}px Canal Brasil VF`; //var name\n        ctx.fillStyle = 'white';\n        \n        ctx.textBaseline = 'middle';\n        ctx.fillText(text, 0, height / 2);\n      }\n    }\n  }, [ textProperties ]);\n\n  // animation\n  const animation = useCallback((letter: any, element: any) => {\n    if (letter instanceof Object === false) return false;\n\n    let props: any = {};\n    const { settings, instance } = letter;\n    // const easing = [ .42, 0, 1, 1 ]; //.01,.68,.4,.91\n\n    if (active === true) {\n      if (settings !== instance) {\n        //const easingAnimation = BezierEasing(easing[0], easing[1], easing[2], easing[3]);\n        const animate: any = current;\n  \n        Object.entries(instance.coordinates).forEach(([ indexTo, toValue ]:any) => {\n          const value = settings.coordinates[indexTo];\n          const reverse = toValue < value;\n          \n          if (reverse === true) {\n            const diff = Math.abs(toValue - value);\n  \n            if (diff > 0) {\n              if (toValue === 0) {\n                const val: any = parseInt((diff - current).toString(), 10);\n                \n                if (val > toValue) {\n                  props[indexTo] = val;\n                } else {\n                  props[indexTo] = toValue;\n                }\n              } else {\n                const val: any = parseInt((value - animate).toString());\n  \n                if (val > toValue) {\n                  props[indexTo] = val;\n                } else {\n                  props[indexTo] = toValue;\n                }\n              }\n            } else {\n              props[indexTo] = toValue;\n            }\n          } else {\n            if (value === toValue) {\n              props[indexTo] = toValue;\n            } else {\n              const pos = parseInt(((toValue * current) / 100).toString(), 10);\n              props[indexTo] = (pos > toValue) ?  toValue : pos;\n            }\n          }\n        });\n      } else {\n        props = settings.coordinates;\n      }\n    } else {\n      props = initialState.coordinates;\n    }\n\n    animationCanvas(element, text);\n    setInstanceValue(props, element);\n  }, [ active, animationCanvas, current, initialState, setInstanceValue, text ]);\n\n  // use effect\n  useEffect(() => {\n    setTimeout(() => {\n      animation(letter, element.current);\n    }, 300);\n  }, [ letter, animation ]);\n\n  // render\n  return (\n    <div className=\"letter-item-animation\" ref={element}>\n      <p className=\"letter--text end\">{text}</p>\n      \n      <canvas className=\"canvas\" />\n    </div>\n  );\n};\n\nexport default memo(LetterItemAnimation);","import React, { memo, useRef, useEffect } from 'react';\n\nimport './letter-item.scss';\n\n// letter item\nconst LetterItem = ({ instanceFont, setInstanceValue, text, onSelect }: any) => {\n  // element\n  const element: any = useRef(null);\n\n  // use effect\n  useEffect(() => {\n    if (element.current) {\n      setInstanceValue(instanceFont.coordinates, element.current);\n    }\n  }, [ text, instanceFont, setInstanceValue, element ]);\n\n  // render\n  return (\n    <div className=\"letter-item\" ref={element} onClick={() => onSelect(instanceFont.coordinates)}>\n      <p className=\"letter--text\">{text}</p>\n    </div>\n  );\n};\n\nexport default memo(LetterItem);","import React, { memo, useCallback, FunctionComponent } from 'react';\n\nimport LetterItem from '../LetterItem';\n\nimport { ILetterType } from './interfaces';\n\nimport './letter-type.scss';\n\n// letter type\nconst LetterType: FunctionComponent<ILetterType> = ({ current, setInstanceValue, instances, text, onSelect }: any) => {\n  // on select\n  const selectLetter = useCallback((instance: any) => {\n    if (instance instanceof Object === false) return false;\n\n    const findInstance = instances.filter(({ coordinates }:any) => coordinates === instance);\n    \n    if (findInstance.length > 0) {\n      onSelect(findInstance[0]);\n    }\n  }, [ onSelect, instances ]);\n\n  // render\n  return (\n    <ul className=\"letter-type\">\n      {instances && instances.map((item: any, index: number) => \n        <li className=\"letter-type--item\"\n          data-active={current.coordinates === item.coordinates}\n          key={index}>\n          \n          <LetterItem\n            instanceFont={item}\n            setInstanceValue={setInstanceValue}\n            text={text}\n            onSelect={selectLetter} />\n        </li>)}\n    </ul>\n  );\n};\n\nexport default memo(LetterType);","import React, { memo, useContext, useRef, useState, useEffect, useCallback } from 'react';\nimport BezierEditor from 'bezier-easing-editor';\n\nimport { FontSettingsContext } from '../../providers/FontSettingsProvider';\nimport { LettersContext } from '../../providers/LettersProvider';\nimport { TextContext } from '../../providers/TextProvider';\n\nimport LetterItemAnimation from './LetterItemAnimation';\nimport LetterType from './LetterType';\n\nimport './letter.scss';\n\n// letter\nconst Letter = ({ active, items, fvar, index, text, type, onChange }: any) => {\n  // context\n  const fontSettingsContext = useContext(FontSettingsContext);\n  const lettersContext = useContext(LettersContext);\n  const textContext = useContext(TextContext);\n\n  const { setInstanceValue, initialState }:any = fontSettingsContext;\n  const { updateLetterItem }:any = lettersContext;\n  const { textProperties }:any = textContext;\n\n  // element\n  const element: any = useRef();\n\n  // state\n  const [ letter, setLetter ]:any = useState({ \n    index: index,\n    instance: initialState.coordinates,\n    easing: [0.83, 0.01, 0.47, 0.59],\n    settings: initialState.coordinates,\n  });\n\n  // on select\n  const onSelect = useCallback((values: any) => {\n    updateLetterItem(index, { instance: { ...values }});\n    setInstanceValue(values, element.current);\n  }, [ index, updateLetterItem, setInstanceValue ]);\n\n  // on select settings\n  const onSelectSettings = useCallback((values: any) => {\n    updateLetterItem(index, { settings: { ...values }});\n  }, [ index, updateLetterItem ]);\n\n  // use effect\n  useEffect(() => {\n    if (Array.isArray(items)) {\n      const check = items.filter((item:any) => item.index === index);\n\n      if (check.length > 0) {\n        setLetter(check[0]);\n      }\n    }\n  }, [ items, index, setLetter ]);\n\n  // render\n  return (\n    <div\n      className=\"letter\"\n      ref={element}\n      data-active={active}\n      data-type={type}>\n\n      <p className=\"letter--text\" onClick={() => onChange(letter)}>{text}</p>\n\n      {type === 2 && <LetterType\n        instances={fvar instanceof Object ? fvar.instances : []}\n        current={letter.settings}\n        onSelect={onSelectSettings}\n        setInstanceValue={setInstanceValue}\n        text={text}\n        key={1} />}\n\n      {type === 2 && <LetterType\n        instances={fvar instanceof Object ? fvar.instances : []}\n        current={letter.instance}\n        onSelect={onSelect}\n        setInstanceValue={setInstanceValue}\n        text={text}\n        key={2} />}\n\n      {type === 3 &&\n        <LetterItemAnimation\n          initialState={initialState}\n          letter={letter}\n          active={active}\n          text={text}\n          textProperties={textProperties}\n          setInstanceValue={setInstanceValue} />}\n\n      {type === 2 && active === true &&\n        <div className=\"letter--easing\">\n          <BezierEditor \n            height={200}\n            curveColor=\"red\"\n            width={330}\n            defaultValue={letter.easing}\n            readOnly />\n        </div>}\n    </div>\n  );\n};\n\nexport default memo(Letter);","import React, { memo, FunctionComponent, useCallback } from 'react';\n\nimport { IFontInfo } from '../../providers/FontSettingsProvider/interfaces';\nimport { IWord } from './interfaces';\n\nimport Letter from '../Letter';\n\nimport './word.scss';\n\n// word\nconst Word: FunctionComponent<IWord> = ({ font, word, letters, getFvarTable, index, type, onChange }) => {\n  // active\n  const getItem = useCallback((items, index) => {\n    return Array.isArray(items) && (items && items.filter((item:any) => item.index === index).length > 0);\n  }, []);\n\n  // text split\n  const getWord = useCallback((font: IFontInfo, word: string = '') => {\n    const items:any = [];\n\n    for (let k = 0; k < word.length; k++) {\n      const character: any = word[k];\n      const value: any = `${character}-${index}-${k}`;\n      const active: any = getItem(letters, value);\n\n      items.push(<Letter\n        active={active}\n        items={letters}\n        fvar={getFvarTable(font)}\n        text={character}\n        index={value}\n        key={value}\n        type={type}\n        onChange={onChange} />);\n    }\n\n    return items;\n  }, [ getItem, index, letters, getFvarTable, onChange, type ]);\n\n  // render\n  return (\n    <div className=\"word\">{getWord(font, word)}</div>\n  );\n};\n\nexport default memo(Word);","import React, { createContext, FunctionComponent, memo, useState, useCallback } from 'react';\n\nimport { ILettersContext, ILettersProvider } from './interfaces';\nimport { IFontInfo } from '../FontSettingsProvider/interfaces';\n\nimport Word from '../../components/Word';\n\n// letter context\nconst LettersContext = createContext({} as ILettersContext);\n\n// letters provider\nconst LettersProvider: FunctionComponent<ILettersProvider> = ({ children }) => {\n  // state\n  const [ letters, setLetters ]:any = useState([]);\n\n  // get align\n  const getAlign = useCallback((value: string) => {\n    switch (value) {\n      case 'right':\n        return 'flex-end';\n      case 'center':\n        return 'center';\n      default:\n        return 'flex-start';\n    }\n  }, []);\n\n  // get element\n  const getLetter = useCallback((index: number) => {\n    if (letters.length > 0) {\n      return letters.filter((item:any) => item.index === index)[0];\n    }\n\n    return false;\n  }, [ letters ]);\n\n  // set letter item\n  const setLetterItem = useCallback((lett: any) => {\n    if (lett instanceof Object === false) return false;\n\n    const letter = getLetter(lett.index);\n    \n    if (letter instanceof Object) {\n      setLetters(letters.filter((item: any) => item !== letter));\n    } else {\n      setLetters([...letters, lett]);\n    }\n  }, [ letters, setLetters, getLetter ]);\n\n  // update letter\n  const updateLetterItem = useCallback((index: number, value: any) => {\n    const item = getLetter(index);\n\n    if (item instanceof Object) {\n      const items = letters;\n      items[items.indexOf(item)] = { ...item, ...value };\n\n      setLetters([\n        ...items\n      ]);\n    }\n  }, [ letters, setLetters, getLetter ]);\n\n  // get array words\n  const getCountWords = useCallback((str: string) => {\n    return str?.trim().split(' ');\n  }, []);\n\n  // get array line break\n  const getLineBreak = useCallback((str: string) => {\n    return str?.split(/\\r?\\n/);\n  }, []);\n\n  // text word letters array\n  const textWordLetterArray = useCallback((text: string = '') => {\n    const items:any = [];\n    const breaks = getLineBreak(text);\n    \n    for (let k = 0; k < breaks.length; k++) {\n      const textLine = breaks[k];\n      const words: any = getCountWords(textLine);\n\n      for (let i = 0; i < words.length; i++) {\n        items.push({ character: 1, item: words[i], index: `${k}${i}` });\n      }\n\n      items.push({ character: 2, item: {} });\n    }\n\n    return items;\n  }, [ getCountWords, getLineBreak ]);\n\n  // text word letter\n  const textWordLetter = useCallback((font: IFontInfo, text: string = '', getFvarTable: any, onChange: any, type: any) => {\n    const elements: any[] = [];\n    const words: any[]  = textWordLetterArray(text);\n\n    for (let i = 0; i < words.length; i++) {\n      const { character, item, index } = words[i];\n\n      switch (character) {\n        case 2:\n          elements.push(<div className=\"separator\" key={`separator${i}`}></div>)\n          break;\n        case 1:\n        default:\n          elements.push(<Word\n            index={i}\n            key={index}\n            font={font}\n            word={item}\n            letters={letters}\n            getFvarTable={getFvarTable}\n            type={type}\n            onChange={onChange} />);\n          \n          elements.push(<div className=\"separator\" key={`separator${i}`}></div>);\n          break;\n      }\n    }\n\n    return elements;\n  }, [ letters, textWordLetterArray ]);\n  \n  // render\n  return (\n    <LettersContext.Provider value={{\n      letters,\n      setAll: setLetters,\n      setLetters: setLetterItem,\n      getLetter,\n      updateLetterItem,\n      getCountWords,\n      getLineBreak,\n      getAlign,\n      textWordLetter,\n      textWordLetterArray,\n    }}>\n      {children}\n    </LettersContext.Provider>\n  );\n};\n\nexport { LettersContext, LettersProvider };\nexport default memo(LettersProvider);","import React, { createContext, FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LettersContext } from '../LettersProvider';\nimport { LoadFontContext } from '../LoadFontProvider';\n\nimport useFont from '../../uses/useFont';\n\nimport { ITemplateContext, ITemplateProvider } from './interfaces';\n\n// template context\nconst TemplateContext = createContext({} as ITemplateContext);\n\n// template provider\nconst TemplateProvider: FunctionComponent<ITemplateProvider> = ({ children }) => {\n  // context\n  const loadFontContext = useContext(LoadFontContext);\n  const lettersContext = useContext(LettersContext);\n\n  // values\n  const { font } = loadFontContext;\n\n  const { getFvarTable } = useFont(font);\n  const { setAll, textWordLetterArray } = lettersContext;\n  \n  // checked index\n  const checkedIndex = useCallback((items: any[], index: string) => {\n    const result = items.filter((item: any) => item.index === index);\n    return result.length > 0;\n  }, []);\n\n  // get instances\n  const getInstances = useCallback((element: string) => {\n    const { instances } = getFvarTable(font);\n\n    if (instances instanceof Object) {\n      for (let key in instances) {\n        const item = instances[key];\n        \n        if (item instanceof Object) {\n          if (element === item.name.en) {\n            return item;\n          }\n        }\n      }\n    }\n    \n    return {};\n  }, [ getFvarTable, font ]);\n\n  // generate letters\n  const generateLetters = useCallback((items: any[]) => {\n    const letters: any[] = [];\n\n    for (let i = 0; i < items.length; i++) {\n      const { init, index, type, bezier } = items[i];\n\n      letters.push({\n        index,\n        easing: bezier,\n        instance: getInstances(type),\n        settings: getInstances(init),\n      });\n    }\n\n    return letters;\n  }, [ getInstances ]);\n\n  // generate\n  const generate = useCallback((text: string, templates: any[]) => {\n    if (templates instanceof Object === false || templates.length === 0) return false;\n    \n    const elements: any[] = [];\n    const words = textWordLetterArray(text).filter((item: any) => item.character === 1);\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const { item, index } = word;\n\n      const template = templates[i];\n\n      if (template) {\n        for (let k = 0; k < template.limit; k++) {\n          const lett = Math.floor((Math.random() * word.item.length) + 1); \n          const random = Math.floor((Math.random() * template.limit) + 1);\n          const value: any = item[lett - 1];\n\n          const key = `${value}-${lett-1}-${index.toString()[index.length - 1]}`;\n          const templateData = template.letters[random];\n\n          if (checkedIndex(elements, key) === false && templateData instanceof Object) {\n            elements.push({ \n              value, \n              index: key, \n              type: templateData.type,\n              bezier: template.letters[random].bezier,\n              init: template.init });\n          }\n        }\n      }\n    }\n\n    setAll(generateLetters(elements));\n  }, [ textWordLetterArray, setAll, checkedIndex, generateLetters ]);\n\n  // render\n  return (\n    <TemplateContext.Provider\n      value={{\n        generate\n      }}>\n      {children}\n    </TemplateContext.Provider>\n  );\n};\n\nexport { TemplateProvider, TemplateContext };\nexport default TemplateProvider;","import React, { createContext } from 'react';\n\nimport AnimationProvider from '../AnimationProvider';\nimport LoadFontProvider from '../LoadFontProvider';\nimport NotificationProvider from '../NotificationProvider';\nimport TextProvider from '../TextProvider';\nimport LettersProvider from '../LettersProvider';\nimport TemplateProvider from '../TemplateProvider';\n\n// Main Context\nconst MainContext = createContext({\n  active: true,\n});\n\n// Main Provider\nconst MainProvider = ({ children }: any) => {\n  // render\n  return (\n    <NotificationProvider>\n      <LoadFontProvider>\n        <AnimationProvider>\n          <TextProvider>\n            <LettersProvider>\n              <TemplateProvider>\n                <MainContext.Provider value={{ active: true, }}>\n                  {children}\n                </MainContext.Provider>\n              </TemplateProvider>\n            </LettersProvider>\n          </TextProvider>\n        </AnimationProvider>\n      </LoadFontProvider>\n    </NotificationProvider>\n  );\n};\n\nexport { MainContext, MainProvider };\nexport default MainProvider;","import React, { memo, FunctionComponent, useContext } from 'react';\nimport { Button, Col, Slider  } from 'rsuite';\n\nimport { AnimationContext } from '../../providers/AnimationProvider';\n\nimport { IAnimationSlider } from './interfaces';\n\nimport './animation-slider.scss';\n\n// animation slider\nconst AnimationSlider: FunctionComponent<IAnimationSlider> = () => {\n  // context\n  const animationContext = useContext(AnimationContext);\n  const { current, setCurrent, onPlay, play } = animationContext;\n  \n  // slider\n  const onSlider = (value:number) => {\n    setCurrent(value);\n  };\n\n  // render\n  return (\n    <Col className=\"animation-slider\" xs={24}>\n      <div className=\"animation-slider--title\">\n        <p>Time Controls</p>\n      </div>\n\n      <div className=\"animation-slider--controls\">\n        <Button\n          className={play === true ? 'btn-ui active min' : 'btn-ui min'}\n          onClick={() => onPlay()}>\n          <span className=\"text\">Render</span>\n        </Button>\n\n        <Button className=\"btn btn-reset\" onClick={() => setCurrent(0)}>\n          refresh\n        </Button>\n      </div>  \n\n      <div className=\"animation-slider--slider\">\n        <Slider\n          onChange={onSlider}\n          min={0}\n          max={100}\n          value={parseInt(current.toString(), 10)}\n          progress\n          defaultValue={0} />\n      </div>\n    </Col>\n  );\n};\n\nexport default memo(AnimationSlider);","import React, { useCallback, memo, FunctionComponent } from 'react';\nimport { Uploader, IconButton, Icon } from 'rsuite';\n\nimport { IDragDrop } from './interfaces';\n\nimport './drag-drop.scss';\n\n// drag drop\nconst DragDrop: FunctionComponent<IDragDrop> = ({ onLoad }) => {\n  // on drop\n  const onDrop = useCallback(files => {\n    if (files.length > 0) {\n      const item = files[files.length - 1];\n\n      if (item instanceof Object) {\n        onLoad(item.blobFile);\n      }\n    }\n  }, [ onLoad ]);\n\n  // render\n  return (\n    <Uploader\n      autoUpload\n      draggable\n      accept=\".ttf\"\n      fileListVisible={false}\n      onChange={onDrop}>\n        <IconButton icon={<Icon icon=\"upload\" />} />\n    </Uploader>\n  );\n};\n\nexport default memo(DragDrop);","import React, { FunctionComponent } from 'react';\nimport { ControlLabel, Icon, Slider } from 'rsuite';\n\nimport { ITextPropertySlider } from './interfaces';\n\nimport './text-property-slider.scss';\n\n// text properties slider\nconst TextPropertySlider: FunctionComponent<ITextPropertySlider> = ({ icon, label, property, onChange, options, value }) => {\n  // render\n  return (\n    <div className=\"text-property-slider\">\n      <ControlLabel className=\"label-control\">\n        <Icon icon={icon.toString()} />{label}\n      </ControlLabel>\n      \n      <Slider\n        {...options}\n        tooltip\n        progress\n        onChange={(value: any) => onChange(value, property)} \n        value={value} />\n    </div>\n  );\n};\n\nexport default TextPropertySlider;","import React, { FunctionComponent } from 'react';\nimport { Form, Col, FormGroup, ButtonGroup, IconButton, Icon } from 'rsuite';\n\nimport TextPropertySlider from './TextPropertySlider';\n\nimport { ITextProperties } from './interfaces';\n\nimport './text-properties.scss';\n\n// text properties\nconst TextProperties: FunctionComponent<ITextProperties> = ({ textProperties, setTextProperties }) => {\n  // text\n  const { fontSize, lineHeight, letterSpacing } = textProperties;\n  \n  // on change\n  const onChange = (value: any, name: string) => {\n    const item:any = {};\n    item[name] = Number(value);\n\n    const result = { ...textProperties, ...item };\n    setTextProperties(result);\n  };\n\n  // on align\n  const onAlign = (value: string) => {\n    const result = { ...textProperties, textAlign: value };\n    setTextProperties(result);\n  };\n\n  // render\n  return (\n    <Form className=\"text-properties\">\n      <FormGroup>\n      <Col xs={24} className=\"text-properties--align\">\n          <ButtonGroup>\n            <IconButton icon={<Icon icon=\"align-left\"/>} onClick={() => onAlign('left')} />\n            <IconButton icon={<Icon icon=\"align-center\"/>} onClick={() => onAlign('center')} />\n            <IconButton icon={<Icon icon=\"align-right\"/>} onClick={() => onAlign('right')} />\n          </ButtonGroup>\n        </Col>\n        \n        <Col xs={24}>\n          <Col xs={24}>\n            <TextPropertySlider\n              icon=\"font\"\n              label=\"Font Size\"\n              property=\"fontSize\"\n              onChange={onChange}\n              options={{ defaultValue: 60, step: 1, min: 32, max: 200 }}\n              value={fontSize} />\n          </Col>\n\n          <Col xs={24}>\n            <TextPropertySlider\n              icon=\"text-height\"\n              label=\"Line Height\"\n              property=\"lineHeight\"\n              onChange={onChange}\n              options={{ defaultValue: 0.1, step: 0.1, min: 0.1, max: 2 }}\n              value={lineHeight} />\n          </Col>\n\n          <Col xs={24}>\n            <TextPropertySlider\n              icon=\"text-width\"\n              label=\"Letter Spacing\"\n              property=\"letterSpacing\"\n              onChange={onChange}\n              options={{ defaultValue: 0, step: 1, min: -20, max: 20 }}\n              value={letterSpacing} />\n          </Col>\n        </Col>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default TextProperties;","import React, { useContext, FunctionComponent } from 'react';\n\nimport { TextContext } from '../../providers/TextProvider';\n\nimport { IEditText } from './interfaces';\n\nimport TextProperties from '../../components/TextProperties';\n\nimport './edit-text.scss';\n\n// edit\nconst Edit: FunctionComponent<IEditText> = ({ font }) => {\n  // context\n  const textContext = useContext(TextContext);\n  const { textProperties, setTextProperties } = textContext;\n\n  // render\n  return (\n    <div className=\"edit-text\">\n      <TextProperties textProperties={textProperties} setTextProperties={setTextProperties} />\n    </div>\n  );\n};\n\nexport default Edit;","import React, { FunctionComponent } from 'react';\nimport { Form, FormGroup, FormControl } from 'rsuite';\n\nimport { IInputText } from './interfaces';\n\nimport './input-text.scss';\n\n// input text\nconst InputText: FunctionComponent<IInputText> = ({ label, setText, text }) => {\n  // render\n  return (\n    <Form className=\"input-text\">\n      <FormGroup className=\"input-text--text\">\n        <label className=\"label\">{label}</label>\n\n        <FormControl\n          placeholder={label}\n          name=\"text\"\n          componentClass=\"textarea\"\n          value={text}\n          onChange={value => setText(value.toString().toUpperCase())} />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default InputText;","import React, { useCallback, useEffect, useRef, useState, Fragment, FunctionComponent } from 'react';\n\nimport { useSpring, animated as a } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\n\nimport { ISliderGallery } from './interfaces';\n\n// slider gallery\nconst SliderGallery: FunctionComponent<ISliderGallery> = ({ className, current, children, width, onPrevNext }) => {\n  // element\n  const gallery: any = useRef(null);\n\n  // state scroll\n  const [ props, set ] = useSpring(() => ({ x: 0 }));\n  const [ scrollProps, setScrollProps ] = useState({ display: 'none', width: 0 });\n  \n  // parent width\n  const parentWidth = useCallback(() => {\n    if (gallery instanceof Object === false) return false;\n\n    const current = gallery.current;\n    \n    if (current instanceof Object) {\n      const containerWidth = current.getBoundingClientRect().width;\n      const container = current.querySelector('.content').getBoundingClientRect();\n\n      return {\n        diff: Math.floor(containerWidth - container.width),\n        galleryWidth: container.width,\n        containerWidth: containerWidth,\n        widthElement: width\n      }\n    }\n\n    return false;\n  }, [ width, gallery ]);\n\n  // bar scroll width\n  const barScrollWidth = useCallback(() => {\n    const properties = parentWidth();\n      \n    if (properties instanceof Object) {\n      const { diff, galleryWidth } = properties;\n\n      if (diff) {\n        const percent = ((100 * diff) / galleryWidth) * -1;\n\n        if (diff < 0) return `${percent}%`;\n      }\n    }\n\n    return 0;\n  }, [ parentWidth ]);\n\n  // scroll move\n  const scrollMove = useCallback((value: number) => {\n    const properties = parentWidth();\n    \n    if (properties instanceof Object) {\n      const { containerWidth } = properties;\n      const percentPosition = ((100 * value) / containerWidth) * -1;\n\n      return `${percentPosition}%`;\n    }\n\n    return 0;\n  }, [ parentWidth ]);\n\n  // drag\n  const drag = useDrag(({ down, movement: [mx], direction: [xDir], distance }) => {\n    if (distance > width / 2) {\n      const direction = xDir > 0 ? -1 : 1;\n\n      if (!down) onPrevNext(direction > 0 ? 'next' : 'prev', parentWidth);\n    }\n  });\n\n  // check scroll\n  const checkScroll = useCallback((current, setScrollProps, gallery) => {\n    const widthScroll = barScrollWidth();\n    const element = gallery.current.parentNode;\n    \n    if (widthScroll === 0) {\n      set({ x: 0 });\n      element.setAttribute('data-controls', 'l');\n      return setScrollProps({ display: 'none', width: 0 });\n    } else {\n      if (current > 0) {\n        const { diff, widthElement, containerWidth, galleryWidth }: any = parentWidth();\n\n        if (diff) {\n          const pos = widthElement * current;\n          const position = pos * -1;\n\n          if (position > (containerWidth - galleryWidth)) {\n            element.setAttribute('data-controls', '');\n            set({ x: position });\n          } else {\n            set({ x: containerWidth - galleryWidth });\n            element.setAttribute('data-controls', 'r');\n          }\n        }\n      } else {\n        element.setAttribute('data-controls', 'l');\n        set({ x: 0 });\n      }\n    }\n\n    return setScrollProps({ display: 'inline-block', width: widthScroll });\n  }, [ barScrollWidth, set, parentWidth ]);\n\n  // use effect\n  useEffect(() => {\n    if (gallery.current instanceof Object) {\n      checkScroll(current, setScrollProps, gallery);\n    }\n  }, [ current, children, setScrollProps, checkScroll ]);\n\n  // render\n  return (\n    <Fragment>\n      <a.div\n        {...drag()}\n        className={`${className}--list`}\n        ref={gallery}>\n        <a.div\n          className=\"content\"\n          style={{\n            transform: props.x.interpolate(x => `translate3d(${x}px,0,0)`),\n            width: children.length * width\n          }}>\n          {children && children.map((Child: any) => Child)}\n        </a.div>\n      </a.div>\n\n      <div \n          className={`${className}--scroll`}\n          style={{ display: scrollProps.display }}>\n          <a.div\n            className=\"bar\"\n            style={{\n              left: props.x.interpolate(x => scrollMove(x)),\n              ...scrollProps }}>\n          </a.div>\n        </div>\n    </Fragment>\n  );\n};\n\nexport default SliderGallery;","import React, { FunctionComponent, useContext, useCallback, useEffect } from 'react';\n\nimport { TemplateContext } from '../../providers/TemplateProvider';\n\nimport SliderGallery from '../Slider/Gallery';\nimport SliderBase from '../Slider/Base';\n\nimport { IGalleryTemplates } from './interfaces';\n\nimport './gallery-templates.scss';\n\n// gallery templates\nconst GalleryTemplates: FunctionComponent<IGalleryTemplates> = ({ current, items, onPrevNext, text, setText, setTextProperties }) => {\n  // context\n  const templateContext = useContext(TemplateContext);\n  const { generate } = templateContext;\n\n  // select template\n  const selectTemplate = useCallback((text, template, textProperties, words) => {\n    setTextProperties(textProperties);\n    setText(words.toUpperCase());\n    generate(text, template);\n  }, [ generate, setTextProperties, setText ]);\n\n  // use effect\n  useEffect(() => {\n    if (items.length > 0) {\n      const { text, template, textProperties, words } = items[0];\n      selectTemplate(text, template, textProperties, words);\n    }\n  }, [ items, selectTemplate ]);\n  \n  // render\n  return (\n    <div className=\"gallery-templates\">\n      <SliderGallery\n        className=\"gallery-templates--item-slider\"\n        current={current}\n        onPrevNext={onPrevNext}\n        width={170}>\n          {items && items.map(({ image, template, textProperties, words }: any, key: number) =>\n            <div\n              className=\"gallery-templates--item-element\"\n              key={key}\n              onClick={() => selectTemplate(text, template, textProperties, words)}>\n                <img src={process.env.PUBLIC_URL + image} alt=\"template\" />\n              </div>)}\n      </SliderGallery>\n    </div>\n  );\n};\n\nexport default SliderBase(GalleryTemplates);","import React from 'react';\n\n// Slider HOC\nexport default function SliderBase(Component: any) {\n  // base\n  const base: any = class extends React.Component {\n    // constructor\n    constructor (props: any) {\n      super(props);\n\n      this.state = {\n        direction: 'none',\n        current: 0,\n        last: undefined,\n      };\n\n      this.onPrevNext = this.onPrevNext.bind(this);\n      this.setCurrent = this.setCurrent.bind(this);\n    }\n\n    // component did mount\n    componentDidMount() {\n      const { items }: any = this.props;\n\n      this.setState({\n        items,\n      });\n    }\n\n    // set current\n    setCurrent (index: number) {\n      if (isNaN(index) === true) return false;\n\n      const { current }: any = this.state;\n\n      this.setState({\n        last: current,\n        direction: (index > current) ? 'prev' : 'next',\n        current: index,\n      });\n    }\n\n    // on prev next\n    onPrevNext (dir: string) {\n      let index;\n      const { current }: any = this.state;\n      const { items }: any = this.props;\n\n      if (dir === 'prev') {\n        index = (current - 1) < 0 ? items.length - 1 : current - 1;\n      } else {\n        index = (current + 1) >= items.length ? 0 : current + 1;\n      }\n      \n      this.setState({\n        last: current,\n        current: index,\n        direction: dir,\n      });\n    }\n\n    // render\n    render () {\n      return (\n        <Component\n          {...this.state}\n          {...this.props}\n          onPrevNext={this.onPrevNext}\n          setCurrent={this.setCurrent}\n        />\n      );\n    }\n  };\n\n  base.displayName = `SliderBase(${Component.displayName || Component.name})`;\n\n  return base;\n};\n","import React from 'react';\nimport { Col } from 'rsuite';\n\nimport { IFontLoad } from './interfaces';\n\nimport './font-load.scss';\n\n// header name\nconst FontLoad = ({ names }: IFontLoad) => {\n  // name\n  const { fontFamily, version } = names;\n\n  // render\n  return (\n    <Col className=\"font-load\" xs={24}>\n      <Col className=\"font-load--content\" xs={24}>\n        <p className=\"label\">Font Family</p>\n\n        <p className=\"name\">{fontFamily.en}</p>\n        <p className=\"version\">{version.en}</p>\n      </Col>\n    </Col>\n  );\n};\n\nexport default FontLoad;","import React, { memo, FunctionComponent } from 'react';\n\nimport FontLoad from '../FontLoad';\n\nimport { ILoad } from './interfaces';\n\nimport './load.scss';\n\n// load\nconst Load: FunctionComponent<ILoad> = ({ font }) => {\n  // render\n  return (\n    <div className=\"load\">\n      {font && <FontLoad names={font.names} />}\n    </div>\n  );\n};\n\nexport default memo(Load);","import React, { memo, useContext, FunctionComponent } from 'react';\nimport { Col } from 'rsuite';\n\nimport { LettersContext } from '../../providers/LettersProvider';\nimport useFont from '../../uses/useFont';\n\nimport { IPreview } from './interfaces';\n\nimport './preview.scss';\n\n// preview\nconst Preview: FunctionComponent<IPreview> = ({ font, text, textProperties }) => {\n  const { getFvarTable } = useFont(font);\n\n  // context\n  const lettersContext = useContext(LettersContext);\n  const { textWordLetter, getAlign }:any = lettersContext;\n  \n  // render\n  return (\n    <div className=\"preview\">\n      <Col className=\"preview--content\" style={{...textProperties, justifyContent: getAlign(textProperties.textAlign) }}>\n        {font && textWordLetter(font, text, getFvarTable, () => {}, 3)}\n      </Col>\n\n      <canvas id=\"preview-canvas\" width=\"1920\" height=\"1080\" />\n      <video />\n    </div>\n  );\n};\n\nexport default memo(Preview);","import React, { memo, useCallback, useRef, useContext, FunctionComponent } from 'react';\nimport { Col } from 'rsuite';\n\nimport { LettersContext } from '../../providers/LettersProvider';\nimport useFont from '../../uses/useFont';\n\nimport { ISelectLetters } from './interfaces';\n\nimport './select-letters.scss';\n\n// preview\nconst SelectLetters: FunctionComponent<ISelectLetters> = ({ font, text }) => {\n  // context\n  const lettersContext = useContext(LettersContext);\n  const { letters, setLetters, textWordLetter } = lettersContext;\n\n  // uses\n  const { getFvarTable } = useFont(font);\n  \n  // element\n  const element = useRef(null);\n\n  // set letter\n  const setLetter = useCallback((letter: number) => setLetters(letter), [ setLetters ]);\n  \n  // render\n  return (\n    <div className=\"select-letters\" ref={element}>\n      <Col xs={24} className=\"select-letters--title\">\n        <p>Click to select the letter you want to transform</p>\n      </Col>\n\n      <Col xs={24} className=\"select-letters--content\">\n        {font && textWordLetter(font, text, getFvarTable, setLetter, 1)}\n      </Col>\n\n      <Col xs={24}  className=\"select-letters--count\">\n        <p><strong>{letters.length}</strong> letters</p>\n      </Col>\n    </div>\n  );\n};\n\nexport default memo(SelectLetters);","import React, { memo, useContext, FunctionComponent } from 'react';\nimport { Col, Message } from 'rsuite';\n\nimport { LettersContext } from '../../providers/LettersProvider';\n\nimport useFont from '../../uses/useFont';\n\nimport { ISelectFinalState } from './interfaces';\n\nimport './select-final-state.scss';\n\n// select-final-state\nconst SelectFinalState: FunctionComponent<ISelectFinalState> = ({ font, text, textProperties }) => {\n  // context\n  const lettersContext = useContext(LettersContext);\n\n  // props context\n  const { getFvarTable } = useFont(font);\n  const { letters, textWordLetter }:any = lettersContext;\n  \n  // render\n  return (\n    <div className=\"select-final-state\">\n      <Col className=\"select-final-state--title\" xs={24}>\n        <p>Select the final stage to letter</p>\n\n        {!letters.length && <Message\n          type=\"error\"\n          description={<p>Select at least one letter in the previous section.</p>} />}\n      </Col>\n      <Col className=\"select-final-state--content\" style={{...textProperties}}>\n        {font && textWordLetter(font, text, getFvarTable, (e: any) => console.log(e), 2)}\n      </Col>\n    </div>\n  );\n};\n\nexport default memo(SelectFinalState);","import React, { useContext, useState, useEffect } from 'react';\nimport { FlexboxGrid, Drawer, Button, ButtonToolbar, Icon } from 'rsuite';\n\nimport { LoadFontContext } from '../../providers/LoadFontProvider';\nimport { TextContext } from '../../providers/TextProvider';\n\nimport AnimationSlider from '../../components/AnimationSlider';\nimport DragDrop from '../../components/DragDrop';\nimport EditText from '../../components/EditText';\nimport InputText from '../../components/InputText';\nimport GalleryTemplates from '../../components/GalleryTemplates';\nimport Load from '../../components/Load';\nimport Preview from '../../components/Preview';\nimport SelectLetters from '../../components/SelectLetters';\nimport SelectFinalState from '../../components/SelectFinalState';\n\n// content\nconst Content = () => {\n  // state\n  const [ items, setItems ]: any = useState([]);\n  const [ pro, setPro ]: any = useState(false);\n  const [ textPro, setTextPro ]: any = useState(false);\n\n  // context\n  const fontContext = useContext(LoadFontContext);\n  const textContext = useContext(TextContext);\n  \n  // font\n  const { font, onLoad } = fontContext;\n  const { text, setText, textProperties, setTextProperties } = textContext;\n\n  useEffect(() => {\n    const load = async () => {\n      fetch(`${process.env.PUBLIC_URL}/template.json`)\n        .then((res) => res.json())\n        .then((data) => setItems(data));\n    };\n\n    load();\n  }, []);\n\n  // render\n  return (\n    <FlexboxGrid justify=\"center\">\n      <FlexboxGrid.Item colspan={9}>\n        <Load font={font} />\n      </FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={9}>\n        <ButtonToolbar>\n          <DragDrop onLoad={onLoad} />\n\n          <Button onClick={() => setPro(true)}>\n            <Icon icon=\"gear-circle\" />\n          </Button>\n\n          <Button onClick={() => setTextPro(true)}>\n            <Icon icon=\"font\" />\n          </Button>\n        </ButtonToolbar>\n      </FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={9}>\n        <InputText label=\"Type here to text\" setText={setText} text={text} />\n      </FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={9}>\n        <label className=\"label\">Gallery</label>\n        <GalleryTemplates\n          items={items}\n          text={text}\n          setText={setText}\n          setTextProperties={setTextProperties} />\n      </FlexboxGrid.Item>\n      \n      <FlexboxGrid.Item colspan={18} className=\"preview-container\">\n        <AnimationSlider />\n        <Preview font={font} text={text} textProperties={textProperties} />\n      </FlexboxGrid.Item>\n\n      <Drawer\n          size={'xs'}\n          placement={'right'}\n          show={pro}\n          onHide={() => setPro(false)}>\n            <Drawer.Header>\n              <Drawer.Title>Advanced Properties</Drawer.Title>\n            </Drawer.Header>\n            <Drawer.Body>\n              <SelectLetters font={font} text={text} />\n              <SelectFinalState\n                font={font}\n                text={text}\n                textProperties={textProperties} />\n            </Drawer.Body>\n            <Drawer.Footer>\n              <Button onClick={() => setPro(false)} appearance=\"primary\">\n                Confirm\n              </Button>\n              <Button onClick={() => setPro(false)} appearance=\"subtle\">\n                Cancel\n              </Button>\n          </Drawer.Footer>\n        </Drawer>\n\n      <Drawer\n        size={'xs'}\n        placement={'right'}\n        show={textPro}\n        onHide={() => setTextPro(false)}>\n          <Drawer.Header>\n            <Drawer.Title>Text properties</Drawer.Title>\n          </Drawer.Header>\n          <Drawer.Body>\n            <EditText font={font} />\n          </Drawer.Body>\n          <Drawer.Footer>\n            <Button onClick={() => setTextPro(false)} appearance=\"primary\">\n              Confirm\n            </Button>\n            <Button onClick={() => setTextPro(false)} appearance=\"subtle\">\n              Cancel\n            </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </FlexboxGrid>\n  );\n};\n\nexport default Content;","import React, { FunctionComponent } from 'react';\nimport { Container } from 'rsuite';\n\nimport MainProvider from '../../providers/MainProvider';\n\nimport Content from '../Content';\n\nimport { IMain } from './interfaces';\n\nimport './main.scss';\n\n// main\nconst Main:FunctionComponent<IMain> = () => {\n  // render\n  return (\n    <MainProvider>\n      <Container>\n        <Content />\n      </Container>\n    </MainProvider>\n  );\n};\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './layout/Main';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}